{
  "contractName": "MemoryInteractor",
  "sourceName": "contracts/MemoryInteractor.sol",
  "abi": [
    {
      "inputs": [],
      "name": "getRWIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64[]",
          "name": "_rwPositions",
          "type": "uint64[]"
        },
        {
          "internalType": "bytes8[]",
          "name": "_rwValues",
          "type": "bytes8[]"
        },
        {
          "internalType": "bool[]",
          "name": "_isRead",
          "type": "bool[]"
        }
      ],
      "name": "initializeMemory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_readAddress",
          "type": "uint64"
        }
      ],
      "name": "memoryRead",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_writeAddress",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "_value",
          "type": "uint64"
        }
      ],
      "name": "memoryWrite",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readClintMtimecmp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readHtifFromhost",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readHtifIConsole",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readHtifIHalt",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readHtifIYield",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readHtifTohost",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflags",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflagsH",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflagsPrv",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflagsX",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIflagsY",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readIlrsc",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMarchid",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMcause",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMcounteren",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMcycle",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMedeleg",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "paddr",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "wordSize",
          "type": "uint64"
        }
      ],
      "name": "readMemory",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMepc",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMideleg",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMie",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMimpid",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMinstret",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMip",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMisa",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMscratch",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMstatus",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMtval",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMtvec",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readMvendorid",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readPc",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readSatp",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readScause",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readScounteren",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readSepc",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readSscratch",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readStval",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readStvec",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "registerIndex",
          "type": "uint64"
        }
      ],
      "name": "readX",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "mask",
          "type": "uint64"
        }
      ],
      "name": "resetMip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "halt",
          "type": "bool"
        }
      ],
      "name": "setIflagsH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isAutomaticYield",
          "type": "bool"
        }
      ],
      "name": "setIflagsX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isManualYield",
          "type": "bool"
        }
      ],
      "name": "setIflagsY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "mask",
          "type": "uint64"
        }
      ],
      "name": "setMip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newPriv",
          "type": "uint64"
        }
      ],
      "name": "setPriv",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeClintMtimecmp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeHtifFromhost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeHtifTohost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "newPriv",
          "type": "uint64"
        }
      ],
      "name": "writeIflagsPrv",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeIlrsc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMcause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMcounteren",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMcycle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMedeleg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "paddr",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "wordSize",
          "type": "uint64"
        }
      ],
      "name": "writeMemory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMepc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMideleg",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMie",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMinstret",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMscratch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMstatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMtval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeMtvec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writePc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeSatp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeScause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeScounteren",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeSepc",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeSscratch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeStval",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeStvec",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "registerindex",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "value",
          "type": "uint64"
        }
      ],
      "name": "writeX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b5061300d806100206000396000f3fe608060405234801561001057600080fd5b506004361061045f5760003560e01c8063854dba401161024c578063b5b98ed411610146578063dd5c4a14116100c3578063f7ac913d11610087578063f7ac913d14610c76578063f991158714610c7e578063fa644af514610ca4578063fbdb975d14610cca578063fd295abe14610cf05761045f565b8063dd5c4a1414610bd6578063f21d94f814610bfc578063f2cf6ceb14610c22578063f55c4d3814610c2a578063f604edb814610c505761045f565b8063cc92cbf71161010a578063cc92cbf714610b72578063cecdae5314610b7a578063d2be7b6d14610ba0578063d40d17c514610bc6578063daded5c214610bce5761045f565b8063b5b98ed414610b2c578063b8fd205c14610b34578063becdc10d14610b3c578063c133b7ff14610b44578063cbc446b114610b4c5761045f565b80639c872d02116101d4578063aaed4f0711610198578063aaed4f0714610a93578063ab9779b714610ab9578063af63b2a814610adf578063b2325aef14610ae7578063b27ec92014610b0d5761045f565b80639c872d0214610893578063a317ce9d146108b9578063a47594df146108c1578063a740dbc114610a6c578063a7458b9514610a745761045f565b80638e32f35e1161021b5780638e32f35e146108275780639485871b14610855578063968644f01461085d5780639b7021ce146108655780639c7b005d1461086d5761045f565b8063854dba40146107cb57806386099c54146107d357806386676d43146107db57806389365909146108015761045f565b806354749af31161035d5780636475e342116102e55780636f6c0e7d116102a95780636f6c0e7d14610767578063768365ea1461076f57806378c495741461077757806378ddee751461079d578063834aa4f6146107c35761045f565b80636475e34214610719578063650ca32b146107215780636a72b27d146107295780636cd24daf146107315780636dc95c2e146107395761045f565b80635af47ca71161032c5780635af47ca7146106975780635dadd78a146106bd5780635e5ca652146106c55780635f824bf9146106eb5780636232e59c146106f35761045f565b806354749af31461061d578063568b270214610643578063575832df1461064b57806357907837146106715761045f565b806328520b30116103eb5780633a48bb56116103af5780633a48bb561461059a57806345057ed7146105b95780634ae9388b146105df57806350cec2d5146105e757806351bb3615146106155761045f565b806328520b301461053657806328751b361461053e5780632ca2bd16146105645780632e963a801461058a57806334970f18146105925761045f565b806311cf3a221161043257806311cf3a22146104f057806315dd9c06146104f857806318e504db1461051e5780631bf2f73d146105265780631e5e61901461052e5761045f565b8063080aa5d1146104645780630df3e2951461047e5780630f84c046146104a657806310d74c7d146104ca575b600080fd5b61046c610d28565b60408051918252519081900360200190f35b6104a46004803603602081101561049457600080fd5b50356001600160401b0316610d2e565b005b6104ae610daa565b604080516001600160401b039092168252519081900360200190f35b6104a4600480360360208110156104e057600080fd5b50356001600160401b0316610e29565b6104ae610e70565b6104a46004803603602081101561050e57600080fd5b50356001600160401b0316610eb9565b6104ae610ed5565b6104ae610f1e565b6104ae610f67565b6104ae610fb0565b6104a46004803603602081101561055457600080fd5b50356001600160401b0316610ff9565b6104a46004803603602081101561057a57600080fd5b50356001600160401b0316611040565b6104ae611087565b6104ae6110d0565b6104a4600480360360208110156105b057600080fd5b50351515611119565b6104a4600480360360208110156105cf57600080fd5b50356001600160401b031661125b565b6104ae611272565b6104ae600480360360408110156105fd57600080fd5b506001600160401b03813581169160200135166112bb565b6104ae611431565b6104a46004803603602081101561063357600080fd5b50356001600160401b031661147a565b6104ae61148e565b6104a46004803603602081101561066157600080fd5b50356001600160401b03166114d7565b6104a46004803603602081101561068757600080fd5b50356001600160401b031661151e565b6104a4600480360360208110156106ad57600080fd5b50356001600160401b0316611565565b6104ae6115ac565b6104a4600480360360208110156106db57600080fd5b50356001600160401b03166115f5565b6104ae61163c565b6104ae6004803603602081101561070957600080fd5b50356001600160401b0316611685565b6104ae611699565b6104ae6116e2565b6104ae61172b565b6104ae611774565b6104a46004803603604081101561074f57600080fd5b506001600160401b03813581169160200135166117bd565b6104ae6117ca565b6104ae611813565b6104a46004803603602081101561078d57600080fd5b50356001600160401b031661185c565b6104a4600480360360208110156107b357600080fd5b50356001600160401b03166118a3565b6104ae6118ea565b6104ae611933565b6104ae61197c565b6104a4600480360360208110156107f157600080fd5b50356001600160401b0316611ad2565b6104a46004803603602081101561081757600080fd5b50356001600160401b0316611b19565b6104a46004803603604081101561083d57600080fd5b506001600160401b0381358116916020013516611b60565b6104ae611c62565b6104ae611cab565b6104ae611d74565b6104a46004803603602081101561088357600080fd5b50356001600160401b0316611dbd565b6104a4600480360360208110156108a957600080fd5b50356001600160401b0316611e04565b6104ae611e4b565b6104a4600480360360608110156108d757600080fd5b8101906020810181356401000000008111156108f257600080fd5b82018360208201111561090457600080fd5b8035906020019184602083028401116401000000008311171561092657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561097657600080fd5b82018360208201111561098857600080fd5b803590602001918460208302840111640100000000831117156109aa57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156109fa57600080fd5b820183602082011115610a0c57600080fd5b80359060200191846020830284011164010000000083111715610a2e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611e94945050505050565b6104ae611f59565b6104a460048036036020811015610a8a57600080fd5b50351515611fa2565b6104a460048036036020811015610aa957600080fd5b50356001600160401b031661203c565b6104a460048036036020811015610acf57600080fd5b50356001600160401b0316612083565b6104ae6120ca565b6104a460048036036020811015610afd57600080fd5b50356001600160401b0316612113565b6104a460048036036020811015610b2357600080fd5b5035151561215a565b6104ae6121f4565b6104ae61223d565b6104ae612286565b6104ae6122cf565b6104a460048036036020811015610b6257600080fd5b50356001600160401b0316612318565b6104ae61235f565b6104a460048036036020811015610b9057600080fd5b50356001600160401b03166123a8565b6104a460048036036020811015610bb657600080fd5b50356001600160401b0316612507565b6104ae61254e565b6104ae612617565b6104a460048036036020811015610bec57600080fd5b50356001600160401b0316612660565b6104a460048036036020811015610c1257600080fd5b50356001600160401b03166126a7565b6104ae6126ee565b6104a460048036036020811015610c4057600080fd5b50356001600160401b0316612737565b6104a460048036036020811015610c6657600080fd5b50356001600160401b031661277e565b6104ae6127c5565b6104a460048036036020811015610c9457600080fd5b50356001600160401b031661288e565b6104ae60048036036020811015610cba57600080fd5b50356001600160401b03166128d5565b6104a460048036036020811015610ce057600080fd5b50356001600160401b031661296e565b6104a460048036036060811015610d0657600080fd5b506001600160401b0381358116916020810135821691604090910135166129b5565b60005490565b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639a59734c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b505af4158015610d89573d6000803e3d6000fd5b505050506040513d6020811015610d9f57600080fd5b505182611b60565b50565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__636630ad876040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b505af4158015610e07573d6000803e3d6000fd5b505050506040513d6020811015610e1d57600080fd5b50516128d5565b905090565b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6372eb67d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__638fd6b7c46040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610ec3611e4b565b8219169050610ed18161203c565b5050565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63734b96006040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63443fd5986040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63ca04595a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6372eb67d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63ca04595a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d124bd136040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6329301cac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__63521819f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b60006111236122cf565b905081156111a15773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e697ace96040518163ffffffff1660e01b815260040160206040518083038186803b15801561116f57600080fd5b505af4158015611183573d6000803e3d6000fd5b505050506040513d602081101561119957600080fd5b505117611214565b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e697ace96040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e557600080fd5b505af41580156111f9573d6000803e3d6000fd5b505050506040513d602081101561120f57600080fd5b505119165b610ed173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632ffdabc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000611265611e4b565b82179050610ed18161203c565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63b255e9e46040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b60006007198316808403826112cf83612bfc565b9050600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5846008026001600160401b03166001896001600160401b031660026001600160401b03160a036001600160401b0316901b6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b15801561135b57600080fd5b505af415801561136f573d6000803e3d6000fd5b505050506040513d602081101561138557600080fd5b50516040805163bf1924c560e01b81526001600160401b03858416811660048301529151929350600886029091169173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b1580156113ef57600080fd5b505af4158015611403573d6000803e3d6000fd5b505050506040513d602081101561141957600080fd5b50516001600160401b0316901c979650505050505050565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__637047f4df6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b611483816123a8565b610da76000196126a7565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6345827f696040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e59cb5746040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63734b96006040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639ff9932b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e2e2e7126040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63a43e290f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6392f5aa226040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000611693826008026128d5565b92915050565b6000610e2473__$3c056aa8a31fb3ce78f242f7ef99e26695$__63870981356040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d41a5b596040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e59cb5746040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63da3e8d7b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610ed18260080282611b60565b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__636299ea3f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__63f4655f126040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6345827f696040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63b255e9e46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__634a4c35106040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63c585eede6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__6317a0cac36040518163ffffffff1660e01b815260040160206040518083038186803b1580156119c257600080fd5b505af41580156119d6573d6000803e3d6000fd5b505050506040513d60208110156119ec57600080fd5b5051604080516351a2ab4160e11b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163a3455682916004808301926020929190829003018186803b158015611a4557600080fd5b505af4158015611a59573d6000803e3d6000fd5b505050506040513d6020811015611a6f57600080fd5b505160408051632ffdabc560e01b81529051611ac19173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__91632ffdabc591600480820192602092909190829003018186803b158015610df357600080fd5b166001600160401b0316901c905090565b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e80d17516040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__637047f4df6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5836040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b158015611bba57600080fd5b505af4158015611bce573d6000803e3d6000fd5b505050506040513d6020811015611be457600080fd5b505160c01b90506001600160c01b03198116611c01846000612c12565b6001600160c01b03191614611c5d576040805162461bcd60e51b815260206004820152601c60248201527f5772697474656e2076616c756520646f6573206e6f74206d6174636800000000604482015290519081900360640190fd5b505050565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d124bd136040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63656b151f6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cf157600080fd5b505af4158015611d05573d6000803e3d6000fd5b505050506040513d6020811015611d1b57600080fd5b50516040805163fd198e5560e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163fd198e55916004808301926020929190829003018186803b158015611a4557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639ff9932b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6329301cac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__638fd6b7c46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63520aff6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b8151835114611ed45760405162461bcd60e51b8152600401808060200182810382526027815260200180612fb16027913960400191505060405180910390fd5b8051835114611f145760405162461bcd60e51b8152600401808060200182810382526027815260200180612fb16027913960400191505060405180910390fd5b600080558251611f2b906001906020860190612dbd565b508151611f3f906002906020850190612e75565b508051611f53906003906020840190612ee2565b50505050565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632935b8ce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000611fac6122cf565b90508115611ff85773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63fd198e556040518163ffffffff1660e01b815260040160206040518083038186803b15801561116f57600080fd5b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63fd198e556040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63520aff6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63443fd5986040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639a59734c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$96c0387300a4d16af366df01fc33f52e50$__630a279d716040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b60006121646122cf565b905081156121b05773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a34556826040518163ffffffff1660e01b815260040160206040518083038186803b15801561116f57600080fd5b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a34556826040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6342db36676040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__636903680c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63929127db6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632ffdabc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__636630ad876040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e80d17516040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b60006123b26122cf565b905073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63910a52476040518163ffffffff1660e01b815260040160206040518083038186803b1580156123f857600080fd5b505af415801561240c573d6000803e3d6000fd5b505050506040513d602081101561242257600080fd5b50516040805163317d2bb560e01b815290516001600160401b0385811693169290921b9173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163317d2bb5916004808301926020929190829003018186803b15801561248157600080fd5b505af4158015612495573d6000803e3d6000fd5b505050506040513d60208110156124ab57600080fd5b505160408051632ffdabc560e01b815290519119939093169190911791610ed19173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__91632ffdabc5916004808301926020929190829003018186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632935b8ce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e89d408d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561259457600080fd5b505af41580156125a8573d6000803e3d6000fd5b505050506040513d60208110156125be57600080fd5b50516040805163e697ace960e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163e697ace9916004808301926020929190829003018186803b158015611a4557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63a43e290f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$96c0387300a4d16af366df01fc33f52e50$__63521819f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e2e2e7126040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__630a279d716040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6342db36676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63da3e8d7b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63910a52476040518163ffffffff1660e01b815260040160206040518083038186803b15801561280b57600080fd5b505af415801561281f573d6000803e3d6000fd5b505050506040513d602081101561283557600080fd5b50516040805163317d2bb560e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163317d2bb5916004808301926020929190829003018186803b158015611a4557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d41a5b596040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c56128fc846001612c12565b60c01c6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b15801561293c57600080fd5b505af4158015612950573d6000803e3d6000fd5b505050506040513d602081101561296657600080fd5b505192915050565b610da773__$3c056aa8a31fb3ce78f242f7ef99e26695$__63870981356040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600060086001600160401b038316049050806001600160401b0316600814156129e7576129e28484611b60565b611f53565b600719841680850360006129fa83612bfc565b9050600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5846008026001600160401b03166001896001600160401b031660026001600160401b03160a036001600160401b0316901b6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b158015612a8657600080fd5b505af4158015612a9a573d6000803e3d6000fd5b505050506040513d6020811015612ab057600080fd5b50516040805163bf1924c560e01b81526001600160401b0389811660020a600019018b16166004820152905191925060009173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b158015612b1d57600080fd5b505af4158015612b31573d6000803e3d6000fd5b505050506040513d6020811015612b4757600080fd5b50516040805163bf1924c560e01b81526001600160401b038084166008890282161c861988161790811660048301529151929350909173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b158015612bb857600080fd5b505af4158015612bcc573d6000803e3d6000fd5b505050506040513d6020811015612be257600080fd5b50519050612bf08682611b60565b50505050505050505050565b6000612c09826001612c12565b60c01c92915050565b6000811515600360005481548110612c2657fe5b90600052602060002090602091828204019190069054906101000a900460ff16151514612c9a576040805162461bcd60e51b815260206004820152601f60248201527f41636365737320776173206e6f742074686520636f7272656374207479706500604482015290519081900360640190fd5b6000600160005481548110612cab57fe5b90600052602060002090600491828204019190066008029054906101000a90046001600160401b031690506000600260005481548110612ce757fe5b60009182526020822060048204015482546001019092556003166008026101000a900460c01b90506007821615612d65576040805162461bcd60e51b815260206004820152601760248201527f506f736974696f6e206973206e6f7420616c69676e6564000000000000000000604482015290519081900360640190fd5b846001600160401b0316826001600160401b031614612db55760405162461bcd60e51b8152600401808060200182810382526026815260200180612f8b6026913960400191505060405180910390fd5b949350505050565b82805482825590600052602060002090600301600490048101928215612e655791602002820160005b83821115612e3057835183826101000a8154816001600160401b0302191690836001600160401b031602179055509260200192600801602081600701049283019260010302612de6565b8015612e635782816101000a8154906001600160401b030219169055600801602081600701049283019260010302612e30565b505b50612e71929150612f75565b5090565b82805482825590600052602060002090600301600490048101928215612e655791602002820160005b83821115612e3057835183826101000a8154816001600160401b03021916908360c01c02179055509260200192600801602081600701049283019260010302612e9e565b82805482825590600052602060002090601f01602090048101928215612e655791602002820160005b83821115612f4857835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302612f0b565b8015612e635782816101000a81549060ff0219169055600101602081600001049283019260010302612f48565b5b80821115612e715760008155600101612f7656fe506f736974696f6e20616e642072656164206164647265737320646f206e6f74206d61746368526561642f77726974652061727261797320617265206e6f74207468652073616d652073697a65a2646970667358221220ac1f61ec2fa57d76c6e3e3b8fd192b4c20dbf9a94735cb583b0b748793b8de5864736f6c63430007040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061045f5760003560e01c8063854dba401161024c578063b5b98ed411610146578063dd5c4a14116100c3578063f7ac913d11610087578063f7ac913d14610c76578063f991158714610c7e578063fa644af514610ca4578063fbdb975d14610cca578063fd295abe14610cf05761045f565b8063dd5c4a1414610bd6578063f21d94f814610bfc578063f2cf6ceb14610c22578063f55c4d3814610c2a578063f604edb814610c505761045f565b8063cc92cbf71161010a578063cc92cbf714610b72578063cecdae5314610b7a578063d2be7b6d14610ba0578063d40d17c514610bc6578063daded5c214610bce5761045f565b8063b5b98ed414610b2c578063b8fd205c14610b34578063becdc10d14610b3c578063c133b7ff14610b44578063cbc446b114610b4c5761045f565b80639c872d02116101d4578063aaed4f0711610198578063aaed4f0714610a93578063ab9779b714610ab9578063af63b2a814610adf578063b2325aef14610ae7578063b27ec92014610b0d5761045f565b80639c872d0214610893578063a317ce9d146108b9578063a47594df146108c1578063a740dbc114610a6c578063a7458b9514610a745761045f565b80638e32f35e1161021b5780638e32f35e146108275780639485871b14610855578063968644f01461085d5780639b7021ce146108655780639c7b005d1461086d5761045f565b8063854dba40146107cb57806386099c54146107d357806386676d43146107db57806389365909146108015761045f565b806354749af31161035d5780636475e342116102e55780636f6c0e7d116102a95780636f6c0e7d14610767578063768365ea1461076f57806378c495741461077757806378ddee751461079d578063834aa4f6146107c35761045f565b80636475e34214610719578063650ca32b146107215780636a72b27d146107295780636cd24daf146107315780636dc95c2e146107395761045f565b80635af47ca71161032c5780635af47ca7146106975780635dadd78a146106bd5780635e5ca652146106c55780635f824bf9146106eb5780636232e59c146106f35761045f565b806354749af31461061d578063568b270214610643578063575832df1461064b57806357907837146106715761045f565b806328520b30116103eb5780633a48bb56116103af5780633a48bb561461059a57806345057ed7146105b95780634ae9388b146105df57806350cec2d5146105e757806351bb3615146106155761045f565b806328520b301461053657806328751b361461053e5780632ca2bd16146105645780632e963a801461058a57806334970f18146105925761045f565b806311cf3a221161043257806311cf3a22146104f057806315dd9c06146104f857806318e504db1461051e5780631bf2f73d146105265780631e5e61901461052e5761045f565b8063080aa5d1146104645780630df3e2951461047e5780630f84c046146104a657806310d74c7d146104ca575b600080fd5b61046c610d28565b60408051918252519081900360200190f35b6104a46004803603602081101561049457600080fd5b50356001600160401b0316610d2e565b005b6104ae610daa565b604080516001600160401b039092168252519081900360200190f35b6104a4600480360360208110156104e057600080fd5b50356001600160401b0316610e29565b6104ae610e70565b6104a46004803603602081101561050e57600080fd5b50356001600160401b0316610eb9565b6104ae610ed5565b6104ae610f1e565b6104ae610f67565b6104ae610fb0565b6104a46004803603602081101561055457600080fd5b50356001600160401b0316610ff9565b6104a46004803603602081101561057a57600080fd5b50356001600160401b0316611040565b6104ae611087565b6104ae6110d0565b6104a4600480360360208110156105b057600080fd5b50351515611119565b6104a4600480360360208110156105cf57600080fd5b50356001600160401b031661125b565b6104ae611272565b6104ae600480360360408110156105fd57600080fd5b506001600160401b03813581169160200135166112bb565b6104ae611431565b6104a46004803603602081101561063357600080fd5b50356001600160401b031661147a565b6104ae61148e565b6104a46004803603602081101561066157600080fd5b50356001600160401b03166114d7565b6104a46004803603602081101561068757600080fd5b50356001600160401b031661151e565b6104a4600480360360208110156106ad57600080fd5b50356001600160401b0316611565565b6104ae6115ac565b6104a4600480360360208110156106db57600080fd5b50356001600160401b03166115f5565b6104ae61163c565b6104ae6004803603602081101561070957600080fd5b50356001600160401b0316611685565b6104ae611699565b6104ae6116e2565b6104ae61172b565b6104ae611774565b6104a46004803603604081101561074f57600080fd5b506001600160401b03813581169160200135166117bd565b6104ae6117ca565b6104ae611813565b6104a46004803603602081101561078d57600080fd5b50356001600160401b031661185c565b6104a4600480360360208110156107b357600080fd5b50356001600160401b03166118a3565b6104ae6118ea565b6104ae611933565b6104ae61197c565b6104a4600480360360208110156107f157600080fd5b50356001600160401b0316611ad2565b6104a46004803603602081101561081757600080fd5b50356001600160401b0316611b19565b6104a46004803603604081101561083d57600080fd5b506001600160401b0381358116916020013516611b60565b6104ae611c62565b6104ae611cab565b6104ae611d74565b6104a46004803603602081101561088357600080fd5b50356001600160401b0316611dbd565b6104a4600480360360208110156108a957600080fd5b50356001600160401b0316611e04565b6104ae611e4b565b6104a4600480360360608110156108d757600080fd5b8101906020810181356401000000008111156108f257600080fd5b82018360208201111561090457600080fd5b8035906020019184602083028401116401000000008311171561092657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561097657600080fd5b82018360208201111561098857600080fd5b803590602001918460208302840111640100000000831117156109aa57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156109fa57600080fd5b820183602082011115610a0c57600080fd5b80359060200191846020830284011164010000000083111715610a2e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611e94945050505050565b6104ae611f59565b6104a460048036036020811015610a8a57600080fd5b50351515611fa2565b6104a460048036036020811015610aa957600080fd5b50356001600160401b031661203c565b6104a460048036036020811015610acf57600080fd5b50356001600160401b0316612083565b6104ae6120ca565b6104a460048036036020811015610afd57600080fd5b50356001600160401b0316612113565b6104a460048036036020811015610b2357600080fd5b5035151561215a565b6104ae6121f4565b6104ae61223d565b6104ae612286565b6104ae6122cf565b6104a460048036036020811015610b6257600080fd5b50356001600160401b0316612318565b6104ae61235f565b6104a460048036036020811015610b9057600080fd5b50356001600160401b03166123a8565b6104a460048036036020811015610bb657600080fd5b50356001600160401b0316612507565b6104ae61254e565b6104ae612617565b6104a460048036036020811015610bec57600080fd5b50356001600160401b0316612660565b6104a460048036036020811015610c1257600080fd5b50356001600160401b03166126a7565b6104ae6126ee565b6104a460048036036020811015610c4057600080fd5b50356001600160401b0316612737565b6104a460048036036020811015610c6657600080fd5b50356001600160401b031661277e565b6104ae6127c5565b6104a460048036036020811015610c9457600080fd5b50356001600160401b031661288e565b6104ae60048036036020811015610cba57600080fd5b50356001600160401b03166128d5565b6104a460048036036020811015610ce057600080fd5b50356001600160401b031661296e565b6104a460048036036060811015610d0657600080fd5b506001600160401b0381358116916020810135821691604090910135166129b5565b60005490565b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639a59734c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b505af4158015610d89573d6000803e3d6000fd5b505050506040513d6020811015610d9f57600080fd5b505182611b60565b50565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__636630ad876040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b505af4158015610e07573d6000803e3d6000fd5b505050506040513d6020811015610e1d57600080fd5b50516128d5565b905090565b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6372eb67d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__638fd6b7c46040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610ec3611e4b565b8219169050610ed18161203c565b5050565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63734b96006040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63443fd5986040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63ca04595a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6372eb67d06040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63ca04595a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d124bd136040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6329301cac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__63521819f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b60006111236122cf565b905081156111a15773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e697ace96040518163ffffffff1660e01b815260040160206040518083038186803b15801561116f57600080fd5b505af4158015611183573d6000803e3d6000fd5b505050506040513d602081101561119957600080fd5b505117611214565b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e697ace96040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e557600080fd5b505af41580156111f9573d6000803e3d6000fd5b505050506040513d602081101561120f57600080fd5b505119165b610ed173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632ffdabc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000611265611e4b565b82179050610ed18161203c565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63b255e9e46040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b60006007198316808403826112cf83612bfc565b9050600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5846008026001600160401b03166001896001600160401b031660026001600160401b03160a036001600160401b0316901b6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b15801561135b57600080fd5b505af415801561136f573d6000803e3d6000fd5b505050506040513d602081101561138557600080fd5b50516040805163bf1924c560e01b81526001600160401b03858416811660048301529151929350600886029091169173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b1580156113ef57600080fd5b505af4158015611403573d6000803e3d6000fd5b505050506040513d602081101561141957600080fd5b50516001600160401b0316901c979650505050505050565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__637047f4df6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b611483816123a8565b610da76000196126a7565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6345827f696040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e59cb5746040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63734b96006040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639ff9932b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e2e2e7126040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63a43e290f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6392f5aa226040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000611693826008026128d5565b92915050565b6000610e2473__$3c056aa8a31fb3ce78f242f7ef99e26695$__63870981356040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d41a5b596040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e59cb5746040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63da3e8d7b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610ed18260080282611b60565b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__636299ea3f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__63f4655f126040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6345827f696040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63b255e9e46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__634a4c35106040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63c585eede6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__6317a0cac36040518163ffffffff1660e01b815260040160206040518083038186803b1580156119c257600080fd5b505af41580156119d6573d6000803e3d6000fd5b505050506040513d60208110156119ec57600080fd5b5051604080516351a2ab4160e11b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163a3455682916004808301926020929190829003018186803b158015611a4557600080fd5b505af4158015611a59573d6000803e3d6000fd5b505050506040513d6020811015611a6f57600080fd5b505160408051632ffdabc560e01b81529051611ac19173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__91632ffdabc591600480820192602092909190829003018186803b158015610df357600080fd5b166001600160401b0316901c905090565b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e80d17516040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__637047f4df6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5836040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b158015611bba57600080fd5b505af4158015611bce573d6000803e3d6000fd5b505050506040513d6020811015611be457600080fd5b505160c01b90506001600160c01b03198116611c01846000612c12565b6001600160c01b03191614611c5d576040805162461bcd60e51b815260206004820152601c60248201527f5772697474656e2076616c756520646f6573206e6f74206d6174636800000000604482015290519081900360640190fd5b505050565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d124bd136040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63656b151f6040518163ffffffff1660e01b815260040160206040518083038186803b158015611cf157600080fd5b505af4158015611d05573d6000803e3d6000fd5b505050506040513d6020811015611d1b57600080fd5b50516040805163fd198e5560e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163fd198e55916004808301926020929190829003018186803b158015611a4557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639ff9932b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6329301cac6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__638fd6b7c46040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63520aff6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b8151835114611ed45760405162461bcd60e51b8152600401808060200182810382526027815260200180612fb16027913960400191505060405180910390fd5b8051835114611f145760405162461bcd60e51b8152600401808060200182810382526027815260200180612fb16027913960400191505060405180910390fd5b600080558251611f2b906001906020860190612dbd565b508151611f3f906002906020850190612e75565b508051611f53906003906020840190612ee2565b50505050565b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632935b8ce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000611fac6122cf565b90508115611ff85773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63fd198e556040518163ffffffff1660e01b815260040160206040518083038186803b15801561116f57600080fd5b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63fd198e556040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63520aff6c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63443fd5986040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__639a59734c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$96c0387300a4d16af366df01fc33f52e50$__630a279d716040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b60006121646122cf565b905081156121b05773__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a34556826040518163ffffffff1660e01b815260040160206040518083038186803b15801561116f57600080fd5b73__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63a34556826040518163ffffffff1660e01b815260040160206040518083038186803b1580156111e557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6342db36676040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__636903680c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63929127db6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632ffdabc56040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__636630ad876040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e80d17516040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b60006123b26122cf565b905073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63910a52476040518163ffffffff1660e01b815260040160206040518083038186803b1580156123f857600080fd5b505af415801561240c573d6000803e3d6000fd5b505050506040513d602081101561242257600080fd5b50516040805163317d2bb560e01b815290516001600160401b0385811693169290921b9173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163317d2bb5916004808301926020929190829003018186803b15801561248157600080fd5b505af4158015612495573d6000803e3d6000fd5b505050506040513d60208110156124ab57600080fd5b505160408051632ffdabc560e01b815290519119939093169190911791610ed19173__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__91632ffdabc5916004808301926020929190829003018186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__632935b8ce6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63e89d408d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561259457600080fd5b505af41580156125a8573d6000803e3d6000fd5b505050506040513d60208110156125be57600080fd5b50516040805163e697ace960e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163e697ace9916004808301926020929190829003018186803b158015611a4557600080fd5b6000610e2473__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63a43e290f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$96c0387300a4d16af366df01fc33f52e50$__63521819f56040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63e2e2e7126040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b6000610e2473__$96c0387300a4d16af366df01fc33f52e50$__630a279d716040518163ffffffff1660e01b815260040160206040518083038186803b158015610df357600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__6342db36676040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63da3e8d7b6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600073__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__63910a52476040518163ffffffff1660e01b815260040160206040518083038186803b15801561280b57600080fd5b505af415801561281f573d6000803e3d6000fd5b505050506040513d602081101561283557600080fd5b50516040805163317d2bb560e01b815290516001600160401b039092169173__$6af7953b03ecb3cadd1ca9bb3675b9b8d6$__9163317d2bb5916004808301926020929190829003018186803b158015611a4557600080fd5b610da773__$edd6a44efa4a8bdf57aa57ccba2bcfbb1d$__63d41a5b596040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c56128fc846001612c12565b60c01c6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b15801561293c57600080fd5b505af4158015612950573d6000803e3d6000fd5b505050506040513d602081101561296657600080fd5b505192915050565b610da773__$3c056aa8a31fb3ce78f242f7ef99e26695$__63870981356040518163ffffffff1660e01b815260040160206040518083038186803b158015610d7557600080fd5b600060086001600160401b038316049050806001600160401b0316600814156129e7576129e28484611b60565b611f53565b600719841680850360006129fa83612bfc565b9050600073__$184ef4a65c614d890e6225597d290b0ed9$__63bf1924c5846008026001600160401b03166001896001600160401b031660026001600160401b03160a036001600160401b0316901b6040518263ffffffff1660e01b815260040180826001600160401b0316815260200191505060206040518083038186803b158015612a8657600080fd5b505af4158015612a9a573d6000803e3d6000fd5b505050506040513d6020811015612ab057600080fd5b50516040805163bf1924c560e01b81526001600160401b0389811660020a600019018b16166004820152905191925060009173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b158015612b1d57600080fd5b505af4158015612b31573d6000803e3d6000fd5b505050506040513d6020811015612b4757600080fd5b50516040805163bf1924c560e01b81526001600160401b038084166008890282161c861988161790811660048301529151929350909173__$184ef4a65c614d890e6225597d290b0ed9$__9163bf1924c5916024808301926020929190829003018186803b158015612bb857600080fd5b505af4158015612bcc573d6000803e3d6000fd5b505050506040513d6020811015612be257600080fd5b50519050612bf08682611b60565b50505050505050505050565b6000612c09826001612c12565b60c01c92915050565b6000811515600360005481548110612c2657fe5b90600052602060002090602091828204019190069054906101000a900460ff16151514612c9a576040805162461bcd60e51b815260206004820152601f60248201527f41636365737320776173206e6f742074686520636f7272656374207479706500604482015290519081900360640190fd5b6000600160005481548110612cab57fe5b90600052602060002090600491828204019190066008029054906101000a90046001600160401b031690506000600260005481548110612ce757fe5b60009182526020822060048204015482546001019092556003166008026101000a900460c01b90506007821615612d65576040805162461bcd60e51b815260206004820152601760248201527f506f736974696f6e206973206e6f7420616c69676e6564000000000000000000604482015290519081900360640190fd5b846001600160401b0316826001600160401b031614612db55760405162461bcd60e51b8152600401808060200182810382526026815260200180612f8b6026913960400191505060405180910390fd5b949350505050565b82805482825590600052602060002090600301600490048101928215612e655791602002820160005b83821115612e3057835183826101000a8154816001600160401b0302191690836001600160401b031602179055509260200192600801602081600701049283019260010302612de6565b8015612e635782816101000a8154906001600160401b030219169055600801602081600701049283019260010302612e30565b505b50612e71929150612f75565b5090565b82805482825590600052602060002090600301600490048101928215612e655791602002820160005b83821115612e3057835183826101000a8154816001600160401b03021916908360c01c02179055509260200192600801602081600701049283019260010302612e9e565b82805482825590600052602060002090601f01602090048101928215612e655791602002820160005b83821115612f4857835183826101000a81548160ff0219169083151502179055509260200192600101602081600001049283019260010302612f0b565b8015612e635782816101000a81549060ff0219169055600101602081600001049283019260010302612f48565b5b80821115612e715760008155600101612f7656fe506f736974696f6e20616e642072656164206164647265737320646f206e6f74206d61746368526561642f77726974652061727261797320617265206e6f74207468652073616d652073697a65a2646970667358221220ac1f61ec2fa57d76c6e3e3b8fd192b4c20dbf9a94735cb583b0b748793b8de5864736f6c63430007040033",
  "linkReferences": {
    "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
      "BitsManipulationLibrary": [
        {
          "length": 20,
          "start": 4853
        },
        {
          "length": 20,
          "start": 5078
        },
        {
          "length": 20,
          "start": 7044
        },
        {
          "length": 20,
          "start": 10489
        },
        {
          "length": 20,
          "start": 10784
        },
        {
          "length": 20,
          "start": 11012
        },
        {
          "length": 20,
          "start": 11167
        }
      ]
    },
    "contracts/CLINT.sol": {
      "CLINT": [
        {
          "length": 20,
          "start": 5824
        },
        {
          "length": 20,
          "start": 10643
        }
      ]
    },
    "contracts/HTIF.sol": {
      "HTIF": [
        {
          "length": 20,
          "start": 4343
        },
        {
          "length": 20,
          "start": 6129
        },
        {
          "length": 20,
          "start": 6202
        },
        {
          "length": 20,
          "start": 8504
        },
        {
          "length": 20,
          "start": 8804
        },
        {
          "length": 20,
          "start": 9861
        },
        {
          "length": 20,
          "start": 10005
        }
      ]
    },
    "contracts/RiscVConstants.sol": {
      "RiscVConstants": [
        {
          "length": 20,
          "start": 4429
        },
        {
          "length": 20,
          "start": 4547
        },
        {
          "length": 20,
          "start": 6560
        },
        {
          "length": 20,
          "start": 6700
        },
        {
          "length": 20,
          "start": 7375
        },
        {
          "length": 20,
          "start": 7515
        },
        {
          "length": 20,
          "start": 8150
        },
        {
          "length": 20,
          "start": 8218
        },
        {
          "length": 20,
          "start": 8590
        },
        {
          "length": 20,
          "start": 8658
        },
        {
          "length": 20,
          "start": 9174
        },
        {
          "length": 20,
          "start": 9320
        },
        {
          "length": 20,
          "start": 9586
        },
        {
          "length": 20,
          "start": 9726
        },
        {
          "length": 20,
          "start": 10217
        },
        {
          "length": 20,
          "start": 10357
        }
      ]
    },
    "contracts/ShadowAddresses.sol": {
      "ShadowAddresses": [
        {
          "length": 20,
          "start": 3411
        },
        {
          "length": 20,
          "start": 3537
        },
        {
          "length": 20,
          "start": 3662
        },
        {
          "length": 20,
          "start": 3735
        },
        {
          "length": 20,
          "start": 3836
        },
        {
          "length": 20,
          "start": 3909
        },
        {
          "length": 20,
          "start": 3982
        },
        {
          "length": 20,
          "start": 4055
        },
        {
          "length": 20,
          "start": 4126
        },
        {
          "length": 20,
          "start": 4197
        },
        {
          "length": 20,
          "start": 4270
        },
        {
          "length": 20,
          "start": 4665
        },
        {
          "length": 20,
          "start": 4761
        },
        {
          "length": 20,
          "start": 5208
        },
        {
          "length": 20,
          "start": 5301
        },
        {
          "length": 20,
          "start": 5372
        },
        {
          "length": 20,
          "start": 5443
        },
        {
          "length": 20,
          "start": 5514
        },
        {
          "length": 20,
          "start": 5587
        },
        {
          "length": 20,
          "start": 5658
        },
        {
          "length": 20,
          "start": 5731
        },
        {
          "length": 20,
          "start": 5897
        },
        {
          "length": 20,
          "start": 5970
        },
        {
          "length": 20,
          "start": 6043
        },
        {
          "length": 20,
          "start": 6273
        },
        {
          "length": 20,
          "start": 6344
        },
        {
          "length": 20,
          "start": 6417
        },
        {
          "length": 20,
          "start": 6490
        },
        {
          "length": 20,
          "start": 6823
        },
        {
          "length": 20,
          "start": 6903
        },
        {
          "length": 20,
          "start": 6974
        },
        {
          "length": 20,
          "start": 7305
        },
        {
          "length": 20,
          "start": 7579
        },
        {
          "length": 20,
          "start": 7650
        },
        {
          "length": 20,
          "start": 7721
        },
        {
          "length": 20,
          "start": 7794
        },
        {
          "length": 20,
          "start": 8064
        },
        {
          "length": 20,
          "start": 8289
        },
        {
          "length": 20,
          "start": 8360
        },
        {
          "length": 20,
          "start": 8433
        },
        {
          "length": 20,
          "start": 8731
        },
        {
          "length": 20,
          "start": 8877
        },
        {
          "length": 20,
          "start": 8950
        },
        {
          "length": 20,
          "start": 9021
        },
        {
          "length": 20,
          "start": 9094
        },
        {
          "length": 20,
          "start": 9454
        },
        {
          "length": 20,
          "start": 9516
        },
        {
          "length": 20,
          "start": 9790
        },
        {
          "length": 20,
          "start": 9932
        },
        {
          "length": 20,
          "start": 10076
        },
        {
          "length": 20,
          "start": 10147
        },
        {
          "length": 20,
          "start": 10419
        }
      ]
    }
  },
  "deployedLinkReferences": {
    "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
      "BitsManipulationLibrary": [
        {
          "length": 20,
          "start": 4821
        },
        {
          "length": 20,
          "start": 5046
        },
        {
          "length": 20,
          "start": 7012
        },
        {
          "length": 20,
          "start": 10457
        },
        {
          "length": 20,
          "start": 10752
        },
        {
          "length": 20,
          "start": 10980
        },
        {
          "length": 20,
          "start": 11135
        }
      ]
    },
    "contracts/CLINT.sol": {
      "CLINT": [
        {
          "length": 20,
          "start": 5792
        },
        {
          "length": 20,
          "start": 10611
        }
      ]
    },
    "contracts/HTIF.sol": {
      "HTIF": [
        {
          "length": 20,
          "start": 4311
        },
        {
          "length": 20,
          "start": 6097
        },
        {
          "length": 20,
          "start": 6170
        },
        {
          "length": 20,
          "start": 8472
        },
        {
          "length": 20,
          "start": 8772
        },
        {
          "length": 20,
          "start": 9829
        },
        {
          "length": 20,
          "start": 9973
        }
      ]
    },
    "contracts/RiscVConstants.sol": {
      "RiscVConstants": [
        {
          "length": 20,
          "start": 4397
        },
        {
          "length": 20,
          "start": 4515
        },
        {
          "length": 20,
          "start": 6528
        },
        {
          "length": 20,
          "start": 6668
        },
        {
          "length": 20,
          "start": 7343
        },
        {
          "length": 20,
          "start": 7483
        },
        {
          "length": 20,
          "start": 8118
        },
        {
          "length": 20,
          "start": 8186
        },
        {
          "length": 20,
          "start": 8558
        },
        {
          "length": 20,
          "start": 8626
        },
        {
          "length": 20,
          "start": 9142
        },
        {
          "length": 20,
          "start": 9288
        },
        {
          "length": 20,
          "start": 9554
        },
        {
          "length": 20,
          "start": 9694
        },
        {
          "length": 20,
          "start": 10185
        },
        {
          "length": 20,
          "start": 10325
        }
      ]
    },
    "contracts/ShadowAddresses.sol": {
      "ShadowAddresses": [
        {
          "length": 20,
          "start": 3379
        },
        {
          "length": 20,
          "start": 3505
        },
        {
          "length": 20,
          "start": 3630
        },
        {
          "length": 20,
          "start": 3703
        },
        {
          "length": 20,
          "start": 3804
        },
        {
          "length": 20,
          "start": 3877
        },
        {
          "length": 20,
          "start": 3950
        },
        {
          "length": 20,
          "start": 4023
        },
        {
          "length": 20,
          "start": 4094
        },
        {
          "length": 20,
          "start": 4165
        },
        {
          "length": 20,
          "start": 4238
        },
        {
          "length": 20,
          "start": 4633
        },
        {
          "length": 20,
          "start": 4729
        },
        {
          "length": 20,
          "start": 5176
        },
        {
          "length": 20,
          "start": 5269
        },
        {
          "length": 20,
          "start": 5340
        },
        {
          "length": 20,
          "start": 5411
        },
        {
          "length": 20,
          "start": 5482
        },
        {
          "length": 20,
          "start": 5555
        },
        {
          "length": 20,
          "start": 5626
        },
        {
          "length": 20,
          "start": 5699
        },
        {
          "length": 20,
          "start": 5865
        },
        {
          "length": 20,
          "start": 5938
        },
        {
          "length": 20,
          "start": 6011
        },
        {
          "length": 20,
          "start": 6241
        },
        {
          "length": 20,
          "start": 6312
        },
        {
          "length": 20,
          "start": 6385
        },
        {
          "length": 20,
          "start": 6458
        },
        {
          "length": 20,
          "start": 6791
        },
        {
          "length": 20,
          "start": 6871
        },
        {
          "length": 20,
          "start": 6942
        },
        {
          "length": 20,
          "start": 7273
        },
        {
          "length": 20,
          "start": 7547
        },
        {
          "length": 20,
          "start": 7618
        },
        {
          "length": 20,
          "start": 7689
        },
        {
          "length": 20,
          "start": 7762
        },
        {
          "length": 20,
          "start": 8032
        },
        {
          "length": 20,
          "start": 8257
        },
        {
          "length": 20,
          "start": 8328
        },
        {
          "length": 20,
          "start": 8401
        },
        {
          "length": 20,
          "start": 8699
        },
        {
          "length": 20,
          "start": 8845
        },
        {
          "length": 20,
          "start": 8918
        },
        {
          "length": 20,
          "start": 8989
        },
        {
          "length": 20,
          "start": 9062
        },
        {
          "length": 20,
          "start": 9422
        },
        {
          "length": 20,
          "start": 9484
        },
        {
          "length": 20,
          "start": 9758
        },
        {
          "length": 20,
          "start": 9900
        },
        {
          "length": 20,
          "start": 10044
        },
        {
          "length": 20,
          "start": 10115
        },
        {
          "length": 20,
          "start": 10387
        }
      ]
    }
  },
  "devdoc": {
    "author": "Felipe Argento",
    "details": "Every read performed by mi.memoryRead or mi.write should be followed by anendianess swap from little endian to big endian. This is the case becauseEVM is big endian but RiscV is little endian.Reference: riscv-spec-v2.2.pdf - Preface to Version 2.0Reference: Ethereum yellowpaper - Version 69351d5Appendix H. Virtual Machine Specification",
    "kind": "dev",
    "methods": {},
    "title": "MemoryInteractor",
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {
        "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
          "BitsManipulationLibrary": [
            {
              "length": 20,
              "start": 4853
            },
            {
              "length": 20,
              "start": 5078
            },
            {
              "length": 20,
              "start": 7044
            },
            {
              "length": 20,
              "start": 10489
            },
            {
              "length": 20,
              "start": 10784
            },
            {
              "length": 20,
              "start": 11012
            },
            {
              "length": 20,
              "start": 11167
            }
          ]
        },
        "contracts/CLINT.sol": {
          "CLINT": [
            {
              "length": 20,
              "start": 5824
            },
            {
              "length": 20,
              "start": 10643
            }
          ]
        },
        "contracts/HTIF.sol": {
          "HTIF": [
            {
              "length": 20,
              "start": 4343
            },
            {
              "length": 20,
              "start": 6129
            },
            {
              "length": 20,
              "start": 6202
            },
            {
              "length": 20,
              "start": 8504
            },
            {
              "length": 20,
              "start": 8804
            },
            {
              "length": 20,
              "start": 9861
            },
            {
              "length": 20,
              "start": 10005
            }
          ]
        },
        "contracts/RiscVConstants.sol": {
          "RiscVConstants": [
            {
              "length": 20,
              "start": 4429
            },
            {
              "length": 20,
              "start": 4547
            },
            {
              "length": 20,
              "start": 6560
            },
            {
              "length": 20,
              "start": 6700
            },
            {
              "length": 20,
              "start": 7375
            },
            {
              "length": 20,
              "start": 7515
            },
            {
              "length": 20,
              "start": 8150
            },
            {
              "length": 20,
              "start": 8218
            },
            {
              "length": 20,
              "start": 8590
            },
            {
              "length": 20,
              "start": 8658
            },
            {
              "length": 20,
              "start": 9174
            },
            {
              "length": 20,
              "start": 9320
            },
            {
              "length": 20,
              "start": 9586
            },
            {
              "length": 20,
              "start": 9726
            },
            {
              "length": 20,
              "start": 10217
            },
            {
              "length": 20,
              "start": 10357
            }
          ]
        },
        "contracts/ShadowAddresses.sol": {
          "ShadowAddresses": [
            {
              "length": 20,
              "start": 3411
            },
            {
              "length": 20,
              "start": 3537
            },
            {
              "length": 20,
              "start": 3662
            },
            {
              "length": 20,
              "start": 3735
            },
            {
              "length": 20,
              "start": 3836
            },
            {
              "length": 20,
              "start": 3909
            },
            {
              "length": 20,
              "start": 3982
            },
            {
              "length": 20,
              "start": 4055
            },
            {
              "length": 20,
              "start": 4126
            },
            {
              "length": 20,
              "start": 4197
            },
            {
              "length": 20,
              "start": 4270
            },
            {
              "length": 20,
              "start": 4665
            },
            {
              "length": 20,
              "start": 4761
            },
            {
              "length": 20,
              "start": 5208
            },
            {
              "length": 20,
              "start": 5301
            },
            {
              "length": 20,
              "start": 5372
            },
            {
              "length": 20,
              "start": 5443
            },
            {
              "length": 20,
              "start": 5514
            },
            {
              "length": 20,
              "start": 5587
            },
            {
              "length": 20,
              "start": 5658
            },
            {
              "length": 20,
              "start": 5731
            },
            {
              "length": 20,
              "start": 5897
            },
            {
              "length": 20,
              "start": 5970
            },
            {
              "length": 20,
              "start": 6043
            },
            {
              "length": 20,
              "start": 6273
            },
            {
              "length": 20,
              "start": 6344
            },
            {
              "length": 20,
              "start": 6417
            },
            {
              "length": 20,
              "start": 6490
            },
            {
              "length": 20,
              "start": 6823
            },
            {
              "length": 20,
              "start": 6903
            },
            {
              "length": 20,
              "start": 6974
            },
            {
              "length": 20,
              "start": 7305
            },
            {
              "length": 20,
              "start": 7579
            },
            {
              "length": 20,
              "start": 7650
            },
            {
              "length": 20,
              "start": 7721
            },
            {
              "length": 20,
              "start": 7794
            },
            {
              "length": 20,
              "start": 8064
            },
            {
              "length": 20,
              "start": 8289
            },
            {
              "length": 20,
              "start": 8360
            },
            {
              "length": 20,
              "start": 8433
            },
            {
              "length": 20,
              "start": 8731
            },
            {
              "length": 20,
              "start": 8877
            },
            {
              "length": 20,
              "start": 8950
            },
            {
              "length": 20,
              "start": 9021
            },
            {
              "length": 20,
              "start": 9094
            },
            {
              "length": 20,
              "start": 9454
            },
            {
              "length": 20,
              "start": 9516
            },
            {
              "length": 20,
              "start": 9790
            },
            {
              "length": 20,
              "start": 9932
            },
            {
              "length": 20,
              "start": 10076
            },
            {
              "length": 20,
              "start": 10147
            },
            {
              "length": 20,
              "start": 10419
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x45F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x854DBA40 GT PUSH2 0x24C JUMPI DUP1 PUSH4 0xB5B98ED4 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xDD5C4A14 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xF7AC913D GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF7AC913D EQ PUSH2 0xC76 JUMPI DUP1 PUSH4 0xF9911587 EQ PUSH2 0xC7E JUMPI DUP1 PUSH4 0xFA644AF5 EQ PUSH2 0xCA4 JUMPI DUP1 PUSH4 0xFBDB975D EQ PUSH2 0xCCA JUMPI DUP1 PUSH4 0xFD295ABE EQ PUSH2 0xCF0 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0xDD5C4A14 EQ PUSH2 0xBD6 JUMPI DUP1 PUSH4 0xF21D94F8 EQ PUSH2 0xBFC JUMPI DUP1 PUSH4 0xF2CF6CEB EQ PUSH2 0xC22 JUMPI DUP1 PUSH4 0xF55C4D38 EQ PUSH2 0xC2A JUMPI DUP1 PUSH4 0xF604EDB8 EQ PUSH2 0xC50 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0xCC92CBF7 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xCC92CBF7 EQ PUSH2 0xB72 JUMPI DUP1 PUSH4 0xCECDAE53 EQ PUSH2 0xB7A JUMPI DUP1 PUSH4 0xD2BE7B6D EQ PUSH2 0xBA0 JUMPI DUP1 PUSH4 0xD40D17C5 EQ PUSH2 0xBC6 JUMPI DUP1 PUSH4 0xDADED5C2 EQ PUSH2 0xBCE JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0xB5B98ED4 EQ PUSH2 0xB2C JUMPI DUP1 PUSH4 0xB8FD205C EQ PUSH2 0xB34 JUMPI DUP1 PUSH4 0xBECDC10D EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0xC133B7FF EQ PUSH2 0xB44 JUMPI DUP1 PUSH4 0xCBC446B1 EQ PUSH2 0xB4C JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x9C872D02 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xAAED4F07 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0xAAED4F07 EQ PUSH2 0xA93 JUMPI DUP1 PUSH4 0xAB9779B7 EQ PUSH2 0xAB9 JUMPI DUP1 PUSH4 0xAF63B2A8 EQ PUSH2 0xADF JUMPI DUP1 PUSH4 0xB2325AEF EQ PUSH2 0xAE7 JUMPI DUP1 PUSH4 0xB27EC920 EQ PUSH2 0xB0D JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x9C872D02 EQ PUSH2 0x893 JUMPI DUP1 PUSH4 0xA317CE9D EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xA47594DF EQ PUSH2 0x8C1 JUMPI DUP1 PUSH4 0xA740DBC1 EQ PUSH2 0xA6C JUMPI DUP1 PUSH4 0xA7458B95 EQ PUSH2 0xA74 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x8E32F35E GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x8E32F35E EQ PUSH2 0x827 JUMPI DUP1 PUSH4 0x9485871B EQ PUSH2 0x855 JUMPI DUP1 PUSH4 0x968644F0 EQ PUSH2 0x85D JUMPI DUP1 PUSH4 0x9B7021CE EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0x9C7B005D EQ PUSH2 0x86D JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x854DBA40 EQ PUSH2 0x7CB JUMPI DUP1 PUSH4 0x86099C54 EQ PUSH2 0x7D3 JUMPI DUP1 PUSH4 0x86676D43 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0x89365909 EQ PUSH2 0x801 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x54749AF3 GT PUSH2 0x35D JUMPI DUP1 PUSH4 0x6475E342 GT PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x6F6C0E7D GT PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x6F6C0E7D EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0x768365EA EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0x78C49574 EQ PUSH2 0x777 JUMPI DUP1 PUSH4 0x78DDEE75 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0x834AA4F6 EQ PUSH2 0x7C3 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x6475E342 EQ PUSH2 0x719 JUMPI DUP1 PUSH4 0x650CA32B EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x6A72B27D EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0x6CD24DAF EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0x6DC95C2E EQ PUSH2 0x739 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x5AF47CA7 GT PUSH2 0x32C JUMPI DUP1 PUSH4 0x5AF47CA7 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0x5DADD78A EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0x5E5CA652 EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0x5F824BF9 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0x6232E59C EQ PUSH2 0x6F3 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x54749AF3 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x568B2702 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0x575832DF EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0x57907837 EQ PUSH2 0x671 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x28520B30 GT PUSH2 0x3EB JUMPI DUP1 PUSH4 0x3A48BB56 GT PUSH2 0x3AF JUMPI DUP1 PUSH4 0x3A48BB56 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x45057ED7 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x4AE9388B EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0x50CEC2D5 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x51BB3615 EQ PUSH2 0x615 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x28520B30 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x28751B36 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x2CA2BD16 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x2E963A80 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x34970F18 EQ PUSH2 0x592 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x11CF3A22 GT PUSH2 0x432 JUMPI DUP1 PUSH4 0x11CF3A22 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x15DD9C06 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x18E504DB EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x1BF2F73D EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x1E5E6190 EQ PUSH2 0x52E JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x80AA5D1 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xDF3E295 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xF84C046 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x10D74C7D EQ PUSH2 0x4CA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xD2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AE PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xE29 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xE70 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xED5 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x125B JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1272 JUMP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x147A JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x148E JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x151E JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x163C JUMP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1685 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x172B JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1774 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x185C JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1933 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x197C JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1D74 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1E94 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x203C JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2113 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x215A JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x21F4 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x223D JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x2286 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x235F JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x23A8 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2507 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x254E JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2660 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x26A7 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2737 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x277E JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x27C5 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x288E JUMP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x28D5 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x296E JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xD06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x9A59734C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xD89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 PUSH2 0x1B60 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x6630AD87 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x28D5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x72EB67D0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x8FD6B7C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEC3 PUSH2 0x1E4B JUMP JUMPDEST DUP3 NOT AND SWAP1 POP PUSH2 0xED1 DUP2 PUSH2 0x203C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x734B9600 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x443FD598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xCA04595A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x72EB67D0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xCA04595A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xD124BD13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x29301CAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x521819F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1123 PUSH2 0x22CF JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x11A1 JUMPI PUSH20 0x0 PUSH4 0xE697ACE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD OR PUSH2 0x1214 JUMP JUMPDEST PUSH20 0x0 PUSH4 0xE697ACE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x11F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD NOT AND JUMPDEST PUSH2 0xED1 PUSH20 0x0 PUSH4 0x2FFDABC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1265 PUSH2 0x1E4B JUMP JUMPDEST DUP3 OR SWAP1 POP PUSH2 0xED1 DUP2 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xB255E9E4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 NOT DUP4 AND DUP1 DUP5 SUB DUP3 PUSH2 0x12CF DUP4 PUSH2 0x2BFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP5 PUSH1 0x8 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EXP SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP5 AND DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x8 DUP7 MUL SWAP1 SWAP2 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1403 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHR SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x7047F4DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1483 DUP2 PUSH2 0x23A8 JUMP JUMPDEST PUSH2 0xDA7 PUSH1 0x0 NOT PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x45827F69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xE59CB574 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x734B9600 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x9FF9932B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xE2E2E712 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xA43E290F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x92F5AA22 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1693 DUP3 PUSH1 0x8 MUL PUSH2 0x28D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x87098135 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xD41A5B59 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xE59CB574 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xDA3E8D7B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED1 DUP3 PUSH1 0x8 MUL DUP3 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x6299EA3F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xF4655F12 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x45827F69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xB255E9E4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x4A4C3510 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xC585EEDE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x17A0CAC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x19D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x51A2AB41 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xA3455682 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1A59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FFDABC5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x1AC1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x2FFDABC5 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xE80D1751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x7047F4DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1BCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xC0 SHL SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP2 AND PUSH2 0x1C01 DUP5 PUSH1 0x0 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND EQ PUSH2 0x1C5D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5772697474656E2076616C756520646F6573206E6F74206D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xD124BD13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x656B151F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1D05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFD198E55 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xFD198E55 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x9FF9932B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x29301CAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x8FD6B7C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x520AFF6C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1ED4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FB1 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP4 MLOAD EQ PUSH2 0x1F14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FB1 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SSTORE DUP3 MLOAD PUSH2 0x1F2B SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x2DBD JUMP JUMPDEST POP DUP2 MLOAD PUSH2 0x1F3F SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x2E75 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1F53 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x2935B8CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FAC PUSH2 0x22CF JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1FF8 JUMPI PUSH20 0x0 PUSH4 0xFD198E55 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0xFD198E55 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x520AFF6C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x443FD598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x9A59734C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xA279D71 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2164 PUSH2 0x22CF JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x21B0 JUMPI PUSH20 0x0 PUSH4 0xA3455682 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0xA3455682 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x42DB3667 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x6903680C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x929127DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x2FFDABC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x6630AD87 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xE80D1751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23B2 PUSH2 0x22CF JUMP JUMPDEST SWAP1 POP PUSH20 0x0 PUSH4 0x910A5247 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x240C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x317D2BB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP2 AND SWAP4 AND SWAP3 SWAP1 SWAP3 SHL SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x317D2BB5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2495 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FFDABC5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 NOT SWAP4 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 PUSH2 0xED1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x2FFDABC5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x2935B8CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xE89D408D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE697ACE9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xE697ACE9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xA43E290F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x521819F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xE2E2E712 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xA279D71 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x42DB3667 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xDA3E8D7B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x910A5247 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x280B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x281F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x317D2BB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x317D2BB5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xD41A5B59 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 PUSH2 0x28FC DUP5 PUSH1 0x1 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0xC0 SHR PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2950 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x87098135 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND DIV SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x8 EQ ISZERO PUSH2 0x29E7 JUMPI PUSH2 0x29E2 DUP5 DUP5 PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x7 NOT DUP5 AND DUP1 DUP6 SUB PUSH1 0x0 PUSH2 0x29FA DUP4 PUSH2 0x2BFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP5 PUSH1 0x8 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EXP SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2A9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 DUP2 AND PUSH1 0x2 EXP PUSH1 0x0 NOT ADD DUP12 AND AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2B31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND PUSH1 0x8 DUP10 MUL DUP3 AND SHR DUP7 NOT DUP9 AND OR SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2BCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2BF0 DUP7 DUP3 PUSH2 0x1B60 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C09 DUP3 PUSH1 0x1 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0xC0 SHR SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2C26 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2C9A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41636365737320776173206E6F742074686520636F7272656374207479706500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2CAB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x8 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2CE7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 DUP3 DIV ADD SLOAD DUP3 SLOAD PUSH1 0x1 ADD SWAP1 SWAP3 SSTORE PUSH1 0x3 AND PUSH1 0x8 MUL PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL SWAP1 POP PUSH1 0x7 DUP3 AND ISZERO PUSH2 0x2D65 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F736974696F6E206973206E6F7420616C69676E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ PUSH2 0x2DB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F8B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 ADD PUSH1 0x4 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2E65 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2E30 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x8 ADD PUSH1 0x20 DUP2 PUSH1 0x7 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2DE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E63 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 SSTORE PUSH1 0x8 ADD PUSH1 0x20 DUP2 PUSH1 0x7 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2E30 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x2E71 SWAP3 SWAP2 POP PUSH2 0x2F75 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 ADD PUSH1 0x4 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2E65 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2E30 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0xC0 SHR MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x8 ADD PUSH1 0x20 DUP2 PUSH1 0x7 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2E9E JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2E65 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2F48 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2F0B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E63 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E71 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F76 JUMP INVALID POP PUSH16 0x736974696F6E20616E64207265616420 PUSH2 0x6464 PUSH19 0x65737320646F206E6F74206D61746368526561 PUSH5 0x2F77726974 PUSH6 0x206172726179 PUSH20 0x20617265206E6F74207468652073616D65207369 PUSH27 0x65A2646970667358221220AC1F61EC2FA57D76C6E3E3B8FD192B4C KECCAK256 0xDB 0xF9 0xA9 SELFBALANCE CALLDATALOAD 0xCB PC EXTCODESIZE SIGNEXTEND PUSH21 0x8793B8DE5864736F6C634300070400330000000000 ",
      "sourceMap": "1351:13538:10:-:0;;;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [],
      "immutableReferences": {},
      "linkReferences": {
        "@cartesi/util/contracts/BitsManipulationLibrary.sol": {
          "BitsManipulationLibrary": [
            {
              "length": 20,
              "start": 4821
            },
            {
              "length": 20,
              "start": 5046
            },
            {
              "length": 20,
              "start": 7012
            },
            {
              "length": 20,
              "start": 10457
            },
            {
              "length": 20,
              "start": 10752
            },
            {
              "length": 20,
              "start": 10980
            },
            {
              "length": 20,
              "start": 11135
            }
          ]
        },
        "contracts/CLINT.sol": {
          "CLINT": [
            {
              "length": 20,
              "start": 5792
            },
            {
              "length": 20,
              "start": 10611
            }
          ]
        },
        "contracts/HTIF.sol": {
          "HTIF": [
            {
              "length": 20,
              "start": 4311
            },
            {
              "length": 20,
              "start": 6097
            },
            {
              "length": 20,
              "start": 6170
            },
            {
              "length": 20,
              "start": 8472
            },
            {
              "length": 20,
              "start": 8772
            },
            {
              "length": 20,
              "start": 9829
            },
            {
              "length": 20,
              "start": 9973
            }
          ]
        },
        "contracts/RiscVConstants.sol": {
          "RiscVConstants": [
            {
              "length": 20,
              "start": 4397
            },
            {
              "length": 20,
              "start": 4515
            },
            {
              "length": 20,
              "start": 6528
            },
            {
              "length": 20,
              "start": 6668
            },
            {
              "length": 20,
              "start": 7343
            },
            {
              "length": 20,
              "start": 7483
            },
            {
              "length": 20,
              "start": 8118
            },
            {
              "length": 20,
              "start": 8186
            },
            {
              "length": 20,
              "start": 8558
            },
            {
              "length": 20,
              "start": 8626
            },
            {
              "length": 20,
              "start": 9142
            },
            {
              "length": 20,
              "start": 9288
            },
            {
              "length": 20,
              "start": 9554
            },
            {
              "length": 20,
              "start": 9694
            },
            {
              "length": 20,
              "start": 10185
            },
            {
              "length": 20,
              "start": 10325
            }
          ]
        },
        "contracts/ShadowAddresses.sol": {
          "ShadowAddresses": [
            {
              "length": 20,
              "start": 3379
            },
            {
              "length": 20,
              "start": 3505
            },
            {
              "length": 20,
              "start": 3630
            },
            {
              "length": 20,
              "start": 3703
            },
            {
              "length": 20,
              "start": 3804
            },
            {
              "length": 20,
              "start": 3877
            },
            {
              "length": 20,
              "start": 3950
            },
            {
              "length": 20,
              "start": 4023
            },
            {
              "length": 20,
              "start": 4094
            },
            {
              "length": 20,
              "start": 4165
            },
            {
              "length": 20,
              "start": 4238
            },
            {
              "length": 20,
              "start": 4633
            },
            {
              "length": 20,
              "start": 4729
            },
            {
              "length": 20,
              "start": 5176
            },
            {
              "length": 20,
              "start": 5269
            },
            {
              "length": 20,
              "start": 5340
            },
            {
              "length": 20,
              "start": 5411
            },
            {
              "length": 20,
              "start": 5482
            },
            {
              "length": 20,
              "start": 5555
            },
            {
              "length": 20,
              "start": 5626
            },
            {
              "length": 20,
              "start": 5699
            },
            {
              "length": 20,
              "start": 5865
            },
            {
              "length": 20,
              "start": 5938
            },
            {
              "length": 20,
              "start": 6011
            },
            {
              "length": 20,
              "start": 6241
            },
            {
              "length": 20,
              "start": 6312
            },
            {
              "length": 20,
              "start": 6385
            },
            {
              "length": 20,
              "start": 6458
            },
            {
              "length": 20,
              "start": 6791
            },
            {
              "length": 20,
              "start": 6871
            },
            {
              "length": 20,
              "start": 6942
            },
            {
              "length": 20,
              "start": 7273
            },
            {
              "length": 20,
              "start": 7547
            },
            {
              "length": 20,
              "start": 7618
            },
            {
              "length": 20,
              "start": 7689
            },
            {
              "length": 20,
              "start": 7762
            },
            {
              "length": 20,
              "start": 8032
            },
            {
              "length": 20,
              "start": 8257
            },
            {
              "length": 20,
              "start": 8328
            },
            {
              "length": 20,
              "start": 8401
            },
            {
              "length": 20,
              "start": 8699
            },
            {
              "length": 20,
              "start": 8845
            },
            {
              "length": 20,
              "start": 8918
            },
            {
              "length": 20,
              "start": 8989
            },
            {
              "length": 20,
              "start": 9062
            },
            {
              "length": 20,
              "start": 9422
            },
            {
              "length": 20,
              "start": 9484
            },
            {
              "length": 20,
              "start": 9758
            },
            {
              "length": 20,
              "start": 9900
            },
            {
              "length": 20,
              "start": 10044
            },
            {
              "length": 20,
              "start": 10115
            },
            {
              "length": 20,
              "start": 10387
            }
          ]
        }
      },
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x45F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x854DBA40 GT PUSH2 0x24C JUMPI DUP1 PUSH4 0xB5B98ED4 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xDD5C4A14 GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xF7AC913D GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xF7AC913D EQ PUSH2 0xC76 JUMPI DUP1 PUSH4 0xF9911587 EQ PUSH2 0xC7E JUMPI DUP1 PUSH4 0xFA644AF5 EQ PUSH2 0xCA4 JUMPI DUP1 PUSH4 0xFBDB975D EQ PUSH2 0xCCA JUMPI DUP1 PUSH4 0xFD295ABE EQ PUSH2 0xCF0 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0xDD5C4A14 EQ PUSH2 0xBD6 JUMPI DUP1 PUSH4 0xF21D94F8 EQ PUSH2 0xBFC JUMPI DUP1 PUSH4 0xF2CF6CEB EQ PUSH2 0xC22 JUMPI DUP1 PUSH4 0xF55C4D38 EQ PUSH2 0xC2A JUMPI DUP1 PUSH4 0xF604EDB8 EQ PUSH2 0xC50 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0xCC92CBF7 GT PUSH2 0x10A JUMPI DUP1 PUSH4 0xCC92CBF7 EQ PUSH2 0xB72 JUMPI DUP1 PUSH4 0xCECDAE53 EQ PUSH2 0xB7A JUMPI DUP1 PUSH4 0xD2BE7B6D EQ PUSH2 0xBA0 JUMPI DUP1 PUSH4 0xD40D17C5 EQ PUSH2 0xBC6 JUMPI DUP1 PUSH4 0xDADED5C2 EQ PUSH2 0xBCE JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0xB5B98ED4 EQ PUSH2 0xB2C JUMPI DUP1 PUSH4 0xB8FD205C EQ PUSH2 0xB34 JUMPI DUP1 PUSH4 0xBECDC10D EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0xC133B7FF EQ PUSH2 0xB44 JUMPI DUP1 PUSH4 0xCBC446B1 EQ PUSH2 0xB4C JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x9C872D02 GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xAAED4F07 GT PUSH2 0x198 JUMPI DUP1 PUSH4 0xAAED4F07 EQ PUSH2 0xA93 JUMPI DUP1 PUSH4 0xAB9779B7 EQ PUSH2 0xAB9 JUMPI DUP1 PUSH4 0xAF63B2A8 EQ PUSH2 0xADF JUMPI DUP1 PUSH4 0xB2325AEF EQ PUSH2 0xAE7 JUMPI DUP1 PUSH4 0xB27EC920 EQ PUSH2 0xB0D JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x9C872D02 EQ PUSH2 0x893 JUMPI DUP1 PUSH4 0xA317CE9D EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xA47594DF EQ PUSH2 0x8C1 JUMPI DUP1 PUSH4 0xA740DBC1 EQ PUSH2 0xA6C JUMPI DUP1 PUSH4 0xA7458B95 EQ PUSH2 0xA74 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x8E32F35E GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x8E32F35E EQ PUSH2 0x827 JUMPI DUP1 PUSH4 0x9485871B EQ PUSH2 0x855 JUMPI DUP1 PUSH4 0x968644F0 EQ PUSH2 0x85D JUMPI DUP1 PUSH4 0x9B7021CE EQ PUSH2 0x865 JUMPI DUP1 PUSH4 0x9C7B005D EQ PUSH2 0x86D JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x854DBA40 EQ PUSH2 0x7CB JUMPI DUP1 PUSH4 0x86099C54 EQ PUSH2 0x7D3 JUMPI DUP1 PUSH4 0x86676D43 EQ PUSH2 0x7DB JUMPI DUP1 PUSH4 0x89365909 EQ PUSH2 0x801 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x54749AF3 GT PUSH2 0x35D JUMPI DUP1 PUSH4 0x6475E342 GT PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x6F6C0E7D GT PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x6F6C0E7D EQ PUSH2 0x767 JUMPI DUP1 PUSH4 0x768365EA EQ PUSH2 0x76F JUMPI DUP1 PUSH4 0x78C49574 EQ PUSH2 0x777 JUMPI DUP1 PUSH4 0x78DDEE75 EQ PUSH2 0x79D JUMPI DUP1 PUSH4 0x834AA4F6 EQ PUSH2 0x7C3 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x6475E342 EQ PUSH2 0x719 JUMPI DUP1 PUSH4 0x650CA32B EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x6A72B27D EQ PUSH2 0x729 JUMPI DUP1 PUSH4 0x6CD24DAF EQ PUSH2 0x731 JUMPI DUP1 PUSH4 0x6DC95C2E EQ PUSH2 0x739 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x5AF47CA7 GT PUSH2 0x32C JUMPI DUP1 PUSH4 0x5AF47CA7 EQ PUSH2 0x697 JUMPI DUP1 PUSH4 0x5DADD78A EQ PUSH2 0x6BD JUMPI DUP1 PUSH4 0x5E5CA652 EQ PUSH2 0x6C5 JUMPI DUP1 PUSH4 0x5F824BF9 EQ PUSH2 0x6EB JUMPI DUP1 PUSH4 0x6232E59C EQ PUSH2 0x6F3 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x54749AF3 EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x568B2702 EQ PUSH2 0x643 JUMPI DUP1 PUSH4 0x575832DF EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0x57907837 EQ PUSH2 0x671 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x28520B30 GT PUSH2 0x3EB JUMPI DUP1 PUSH4 0x3A48BB56 GT PUSH2 0x3AF JUMPI DUP1 PUSH4 0x3A48BB56 EQ PUSH2 0x59A JUMPI DUP1 PUSH4 0x45057ED7 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0x4AE9388B EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0x50CEC2D5 EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x51BB3615 EQ PUSH2 0x615 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x28520B30 EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0x28751B36 EQ PUSH2 0x53E JUMPI DUP1 PUSH4 0x2CA2BD16 EQ PUSH2 0x564 JUMPI DUP1 PUSH4 0x2E963A80 EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0x34970F18 EQ PUSH2 0x592 JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x11CF3A22 GT PUSH2 0x432 JUMPI DUP1 PUSH4 0x11CF3A22 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x15DD9C06 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0x18E504DB EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x1BF2F73D EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0x1E5E6190 EQ PUSH2 0x52E JUMPI PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH4 0x80AA5D1 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xDF3E295 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xF84C046 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x10D74C7D EQ PUSH2 0x4CA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x46C PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xD2E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AE PUSH2 0xDAA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xE29 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xE70 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xEB9 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xED5 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xF1E JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xFB0 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x554 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x57A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1087 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x10D0 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1119 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x125B JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1272 JUMP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x633 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x147A JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x148E JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x14D7 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x687 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x151E JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x15AC JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x163C JUMP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1685 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x172B JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1774 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x74F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x17BD JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x17CA JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1813 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x78D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x185C JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x18A3 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x18EA JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1933 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x197C JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1B19 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1C62 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1D74 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1E04 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1E4B JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x926 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 SWAP5 SWAP4 PUSH1 0x20 DUP2 ADD SWAP4 POP CALLDATALOAD SWAP2 POP POP PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x9FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xA0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1E94 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x203C JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xACF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x20CA JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2113 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x215A JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x21F4 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x223D JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x2286 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x22CF JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x235F JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x23A8 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2507 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x254E JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2660 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x26A7 JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x2737 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x277E JUMP JUMPDEST PUSH2 0x4AE PUSH2 0x27C5 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x288E JUMP JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x28D5 JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x296E JUMP JUMPDEST PUSH2 0x4A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xD06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0x29B5 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x9A59734C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xD89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP3 PUSH2 0x1B60 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x6630AD87 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0xE07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xE1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x28D5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x72EB67D0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x8FD6B7C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEC3 PUSH2 0x1E4B JUMP JUMPDEST DUP3 NOT AND SWAP1 POP PUSH2 0xED1 DUP2 PUSH2 0x203C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x734B9600 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x443FD598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xCA04595A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x72EB67D0 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xCA04595A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xD124BD13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x29301CAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x521819F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1123 PUSH2 0x22CF JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x11A1 JUMPI PUSH20 0x0 PUSH4 0xE697ACE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1183 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD OR PUSH2 0x1214 JUMP JUMPDEST PUSH20 0x0 PUSH4 0xE697ACE9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x11F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD NOT AND JUMPDEST PUSH2 0xED1 PUSH20 0x0 PUSH4 0x2FFDABC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1265 PUSH2 0x1E4B JUMP JUMPDEST DUP3 OR SWAP1 POP PUSH2 0xED1 DUP2 PUSH2 0x203C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xB255E9E4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 NOT DUP4 AND DUP1 DUP5 SUB DUP3 PUSH2 0x12CF DUP4 PUSH2 0x2BFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP5 PUSH1 0x8 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EXP SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP5 AND DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x8 DUP7 MUL SWAP1 SWAP2 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1403 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHR SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x7047F4DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1483 DUP2 PUSH2 0x23A8 JUMP JUMPDEST PUSH2 0xDA7 PUSH1 0x0 NOT PUSH2 0x26A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x45827F69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xE59CB574 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x734B9600 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x9FF9932B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xE2E2E712 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xA43E290F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x92F5AA22 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1693 DUP3 PUSH1 0x8 MUL PUSH2 0x28D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x87098135 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xD41A5B59 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xE59CB574 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xDA3E8D7B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xED1 DUP3 PUSH1 0x8 MUL DUP3 PUSH2 0x1B60 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x6299EA3F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xF4655F12 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x45827F69 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xB255E9E4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x4A4C3510 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xC585EEDE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x17A0CAC3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x19D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x19EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x51A2AB41 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xA3455682 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1A59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1A6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FFDABC5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x1AC1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x2FFDABC5 SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHR SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xE80D1751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x7047F4DF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1BCE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0xC0 SHL SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP2 AND PUSH2 0x1C01 DUP5 PUSH1 0x0 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND EQ PUSH2 0x1C5D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5772697474656E2076616C756520646F6573206E6F74206D6174636800000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xD124BD13 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x656B151F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1D05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xFD198E55 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xFD198E55 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x9FF9932B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x29301CAC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x8FD6B7C4 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x520AFF6C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x1ED4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FB1 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP4 MLOAD EQ PUSH2 0x1F14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FB1 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SSTORE DUP3 MLOAD PUSH2 0x1F2B SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x2DBD JUMP JUMPDEST POP DUP2 MLOAD PUSH2 0x1F3F SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x2E75 JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x1F53 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x2EE2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x2935B8CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FAC PUSH2 0x22CF JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x1FF8 JUMPI PUSH20 0x0 PUSH4 0xFD198E55 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0xFD198E55 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x520AFF6C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x443FD598 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x9A59734C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xA279D71 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2164 PUSH2 0x22CF JUMP JUMPDEST SWAP1 POP DUP2 ISZERO PUSH2 0x21B0 JUMPI PUSH20 0x0 PUSH4 0xA3455682 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0x0 PUSH4 0xA3455682 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x42DB3667 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x6903680C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x929127DB PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0x2FFDABC5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x6630AD87 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xE80D1751 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x23B2 PUSH2 0x22CF JUMP JUMPDEST SWAP1 POP PUSH20 0x0 PUSH4 0x910A5247 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x23F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x240C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x317D2BB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP6 DUP2 AND SWAP4 AND SWAP3 SWAP1 SWAP3 SHL SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x317D2BB5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2495 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x2FFDABC5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 NOT SWAP4 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 PUSH2 0xED1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x2FFDABC5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x2935B8CE PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xE89D408D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2594 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x25A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x25BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xE697ACE9 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xE697ACE9 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xA43E290F PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x521819F5 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xE2E2E712 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE24 PUSH20 0x0 PUSH4 0xA279D71 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x42DB3667 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xDA3E8D7B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0x910A5247 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x280B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x281F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2835 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x317D2BB5 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH20 0x0 SWAP2 PUSH4 0x317D2BB5 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0xD41A5B59 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 PUSH2 0x28FC DUP5 PUSH1 0x1 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0xC0 SHR PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x293C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2950 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2966 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA7 PUSH20 0x0 PUSH4 0x87098135 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 AND DIV SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x8 EQ ISZERO PUSH2 0x29E7 JUMPI PUSH2 0x29E2 DUP5 DUP5 PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x7 NOT DUP5 AND DUP1 DUP6 SUB PUSH1 0x0 PUSH2 0x29FA DUP4 PUSH2 0x2BFC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0x0 PUSH4 0xBF1924C5 DUP5 PUSH1 0x8 MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EXP SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2A9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2AB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP10 DUP2 AND PUSH1 0x2 EXP PUSH1 0x0 NOT ADD DUP12 AND AND PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2B31 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xBF1924C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND PUSH1 0x8 DUP10 MUL DUP3 AND SHR DUP7 NOT DUP9 AND OR SWAP1 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 PUSH20 0x0 SWAP2 PUSH4 0xBF1924C5 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x2BCC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2BE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH2 0x2BF0 DUP7 DUP3 PUSH2 0x1B60 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C09 DUP3 PUSH1 0x1 PUSH2 0x2C12 JUMP JUMPDEST PUSH1 0xC0 SHR SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2C26 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x2C9A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41636365737320776173206E6F742074686520636F7272656374207479706500 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2CAB JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x8 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x2CE7 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 DUP3 DIV ADD SLOAD DUP3 SLOAD PUSH1 0x1 ADD SWAP1 SWAP3 SSTORE PUSH1 0x3 AND PUSH1 0x8 MUL PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xC0 SHL SWAP1 POP PUSH1 0x7 DUP3 AND ISZERO PUSH2 0x2D65 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F736974696F6E206973206E6F7420616C69676E6564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND EQ PUSH2 0x2DB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F8B PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 ADD PUSH1 0x4 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2E65 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2E30 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x8 ADD PUSH1 0x20 DUP2 PUSH1 0x7 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2DE6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E63 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 SSTORE PUSH1 0x8 ADD PUSH1 0x20 DUP2 PUSH1 0x7 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2E30 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x2E71 SWAP3 SWAP2 POP PUSH2 0x2F75 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 ADD PUSH1 0x4 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2E65 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2E30 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0xC0 SHR MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x8 ADD PUSH1 0x20 DUP2 PUSH1 0x7 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2E9E JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2E65 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x2F48 JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2F0B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E63 JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 ADD PUSH1 0x20 DUP2 PUSH1 0x0 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x2F48 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2E71 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2F76 JUMP INVALID POP PUSH16 0x736974696F6E20616E64207265616420 PUSH2 0x6464 PUSH19 0x65737320646F206E6F74206D61746368526561 PUSH5 0x2F77726974 PUSH6 0x206172726179 PUSH20 0x20617265206E6F74207468652073616D65207369 PUSH27 0x65A2646970667358221220AC1F61EC2FA57D76C6E3E3B8FD192B4C KECCAK256 0xDB 0xF9 0xA9 SELFBALANCE CALLDATALOAD 0xCB PC EXTCODESIZE SIGNEXTEND PUSH21 0x8793B8DE5864736F6C634300070400330000000000 ",
      "sourceMapi;:::-;;;;;;;;;;;;;;;;9163:110;;;;;;;;;;;;;;;;-1:-1:-1;9163:110:10;-1:-1:-1;;;;;9163:110:10;;:::i;:::-;;5641:107;;;:::i;:::-;;;;-1:-1:-1;;;;;5641:107:10;;;;;;;;;;;;;;9047:110;;;;;;;;;;;;;;;;-1:-1:-1;9047:110:10;-1:-1:-1;;;;;9047:110:10;;:::i;5189:107::-;;;:::i;7789:122::-;;;;;;;;;;;;;;;;-1:-1:-1;7789:122:10;-1:-1:-1;;;;;7789:122:10;;:::i;4608:105::-;;;:::i;4382:::-;;;:::i;3577:::-;;;:::i;3220:113::-;;;:::i;9955:102::-;;;;;;;;;;;;;;;;-1:-1:-1;9955:102:10;-1:-1:-1;;;;;9955:102:10;;:::i;8815:114::-;;;;;;;;;;;;;;;;-1:-1:-1;8815:114:10;-1:-1:-1;;;;;8815:114:10;;:::i;4842:107::-;;;:::i;2526:110::-;;;:::i;11060:339::-;;;;;;;;;;;;;;;;-1:-1:-1;11060:339:10;;;;:::i;7664:119::-;;;;;;;;;;;;;;;;-1:-1:-1;7664:119:10;-1:-1:-1;;;;;7664:119:10;;:::i;4719:117::-;;;:::i;6855:642::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6855:642:10;;;;;;;;;;:::i;3105:109::-;;;:::i;7515:143::-;;;;;;;;;;;;;;;;-1:-1:-1;7515:143:10;-1:-1:-1;;;;;7515:143:10;;:::i;4493:109::-;;;:::i;8477:108::-;;;;;;;;;;;;;;;;-1:-1:-1;8477:108:10;-1:-1:-1;;;;;8477:108:10;;:::i;9511:102::-;;;;;;;;;;;;;;;;-1:-1:-1;9511:102:10;-1:-1:-1;;;;;9511:102:10;;:::i;8147:110::-;;;;;;;;;;;;;;;;-1:-1:-1;8147:110:10;-1:-1:-1;;;;;8147:110:10;;:::i;5302:107::-;;;:::i;8935:106::-;;;;;;;;;;;;;;;;-1:-1:-1;8935:106:10;-1:-1:-1;;;;;8935:106:10;;:::i;3910:115::-;;;:::i;2167:114::-;;;;;;;;;;;;;;;;-1:-1:-1;2167:114:10;-1:-1:-1;;;;;2167:114:10;;:::i;2287:113::-;;;:::i;5415:101::-;;;:::i;5072:111::-;;;:::i;3797:107::-;;;:::i;13252:113::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13252:113:10;;;;;;;;;;:::i;2880:110::-;;;:::i;2642:108::-;;;:::i;9399:106::-;;;;;;;;;;;;;;;;-1:-1:-1;9399:106:10;-1:-1:-1;;;;;9399:106:10;;:::i;9279:114::-;;;;;;;;;;;;;;;;-1:-1:-1;9279:114:10;-1:-1:-1;;;;;9279:114:10;;:::i;5871:105::-;;;:::i;4031:111::-;;;:::i;6667:182::-;;;:::i;7931:100::-;;;;;;;;;;;;;;;;-1:-1:-1;7931:100:10;-1:-1:-1;;;;;7931:100:10;;:::i;9843:106::-;;;;;;;;;;;;;;;;-1:-1:-1;9843:106:10;-1:-1:-1;;;;;9843:106:10;;:::i;13603:272::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13603:272:10;;;;;;;;;;:::i;3454:117::-;;;:::i;6291:182::-;;;:::i;5522:113::-;;;:::i;9619:104::-;;;;;;;;;;;;;;;;-1:-1:-1;9619:104:10;-1:-1:-1;;;;;9619:104:10;;:::i;8705:::-;;;;;;;;;;;;;;;;-1:-1:-1;8705:104:10;-1:-1:-1;;;;;8705:104:10;;:::i;3688:103::-;;;:::i;1585:475::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1585:475:10;;;;;;;;-1:-1:-1;1585:475:10;;-1:-1:-1;;1585:475:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1585:475:10;;;;;;;;-1:-1:-1;1585:475:10;;-1:-1:-1;;1585:475:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1585:475:10;;-1:-1:-1;1585:475:10;;-1:-1:-1;;;;;1585:475:10:i;4955:111::-;;;:::i;10733:321::-;;;;;;;;;;;;;;;;-1:-1:-1;10733:321:10;;;;:::i;8263:100::-;;;;;;;;;;;;;;;;-1:-1:-1;8263:100:10;-1:-1:-1;;;;;8263:100:10;;:::i;8369:102::-;;;;;;;;;;;;;;;;-1:-1:-1;8369:102:10;-1:-1:-1;;;;;8369:102:10;;:::i;4263:113::-;;;:::i;10503:111::-;;;;;;;;;;;;;;;;-1:-1:-1;10503:111:10;-1:-1:-1;;;;;10503:111:10;;:::i;11405:345::-;;;;;;;;;;;;;;;;-1:-1:-1;11405:345:10;;;;:::i;5754:111::-;;;:::i;2756:114::-;;;:::i;4148:109::-;;;:::i;5982:::-;;;:::i;8037:104::-;;;;;;;;;;;;;;;;-1:-1:-1;8037:104:10;-1:-1:-1;;;;;8037:104:10;;:::i;2996:103::-;;;:::i;11756:337::-;;;;;;;;;;;;;;;;-1:-1:-1;11756:337:10;-1:-1:-1;;;;;11756:337:10;;:::i;8591:108::-;;;;;;;;;;;;;;;;-1:-1:-1;8591:108:10;-1:-1:-1;;;;;8591:108:10;;:::i;6479:182::-;;;:::i;3339:109::-;;;:::i;10620:107::-;;;;;;;;;;;;;;;;-1:-1:-1;10620:107:10;-1:-1:-1;;;;;10620:107:10;;:::i;10277:104::-;;;;;;;;;;;;;;;;-1:-1:-1;10277:104:10;-1:-1:-1;;;;;10277:104:10;;:::i;2406:114::-;;;:::i;9729:108::-;;;;;;;;;;;;;;;;-1:-1:-1;9729:108:10;-1:-1:-1;;;;;9729:108:10;;:::i;10063:104::-;;;;;;;;;;;;;;;;-1:-1:-1;10063:104:10;-1:-1:-1;;;;;10063:104:10;;:::i;6097:188::-;;;:::i;10173:98::-;;;;;;;;;;;;;;;;-1:-1:-1;10173:98:10;-1:-1:-1;;;;;10173:98:10;;:::i;13397:200::-;;;;;;;;;;;;;;;;-1:-1:-1;13397:200:10;-1:-1:-1;;;;;13397:200:10;;:::i;10387:110::-;;;;;;;;;;;;;;;;-1:-1:-1;10387:110:10;-1:-1:-1;;;;;10387:110:10;;:::i;12099:1147::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12099:1147:10;;;;;;;;;;;;;;;;;;;:::i;2066:83::-;2109:7;2135;2066:83;:::o;9163:110::-;9217:49;9229:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9229:29:10;9260:5;9217:11;:49::i;:::-;9163:110;:::o;5641:107::-;5678:6;5703:38;5714:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5714:26:10;5703:10;:38::i;:::-;5696:45;;5641:107;:::o;9047:110::-;9101:49;9113:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5189:107;5226:6;5251:38;5262:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7789:122;7837:10;7850:9;:7;:9::i;:::-;7876:5;;7869:12;;-1:-1:-1;7891:13:10;7869:12;7891:8;:13::i;:::-;7789:122;;:::o;4608:105::-;4644:6;4669:37;4680:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4382:105;4418:6;4443:37;4454:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3577:105;3613:6;3638:37;3649:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3220:113;3260:6;3285:41;3296:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9955:102;10005:45;10017:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8815:114;8871:51;8883:15;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4842:107;4879:6;4904:38;4915:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2526:110;2568:6;2593:36;2604:4;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11060:339;11117:13;11133:12;:10;:12::i;:::-;11117:28;;11160:13;11156:178;;;11208:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11208:31:10;11199:40;11156:178;;;11291:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11291:31:10;11290:32;11281:41;11156:178;11344:48;11356:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7664:119;7710:10;7723:9;:7;:9::i;:::-;7742:11;;;-1:-1:-1;7763:13:10;7742:11;7763:8;:13::i;4719:117::-;4761:6;4786:43;4797:15;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6855:642;6922:6;-1:-1:-1;;7019:18:10;;7064:24;;;6922:6;7173:32;7019:18;7173:14;:32::i;:::-;7160:45;;7281:16;7300:23;:40;7374:7;7382:1;7374:9;-1:-1:-1;;;;;7341:42:10;7368:1;7356:8;-1:-1:-1;;;;;7343:21:10;7350:1;-1:-1:-1;;;;;7343:21:10;;7342:27;-1:-1:-1;;;;;7341:42:10;;;7300:84;;;;;;;;;;;;;-1:-1:-1;;;;;7300:84:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7300:84:10;7400:57;;;-1:-1:-1;;;7400:57:10;;-1:-1:-1;;;;;7441:15:10;;;7400:57;;;;;;;;7300:84;;-1:-1:-1;7469:1:10;7461:9;;7400:70;;;;:23;;:40;;:57;;;;;7300:84;;7400:57;;;;;;;:23;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7400:57:10;-1:-1:-1;;;;;7400:70:10;;;;6855:642;-1:-1:-1;;;;;;;6855:642:10:o;3105:109::-;3143:6;3168:39;3179:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7515:143;7565:23;7580:7;7565:14;:23::i;:::-;7598:22;-1:-1:-1;;7598:10:10;:22::i;4493:109::-;4531:6;4556:39;4567:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8477:108;8530:48;8542:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9511:102;9561:45;9573:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8147:110;8201:49;8213:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5302:107;5339:6;5364:38;5375:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8935:106;8987:47;8999:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3910:115;3951:6;3976:42;3987:15;:28;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2167:114;2220:6;2245:29;2256:13;2272:1;2256:17;2245:10;:29::i;:::-;2238:36;2167:114;-1:-1:-1;;2167:114:10:o;2287:113::-;2332:6;2357:36;2368:5;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5415:101;5449:6;5474:35;5485:15;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5072:111;5111:6;5136:40;5147:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3797:107;3834:6;3859:38;3870:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13252:113;13321:37;13333:13;13349:1;13333:17;13352:5;13321:11;:37::i;2880:110::-;2922:6;2947:36;2958:4;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2642:108;2683:6;2708:35;2719:4;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9399:106;9451:47;9463:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9279:114;9335:51;9347:15;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:105;5907:6;5932:37;5943:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4031:111;4070:6;4095:40;4106:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6667:182;6706:6;6810:14;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6810:32:10;6774:31;;;-1:-1:-1;;;6774:31:10;;;;-1:-1:-1;;;;;6731:111:10;;;;6774:14;;:29;;:31;;;;;6810:32;;6774:31;;;;;;;:14;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6774:31:10;6743:27;;;-1:-1:-1;;;6743:27:10;;;;6732:39;;6743:15;;:25;;:27;;;;;6774:31;;6743:27;;;;;;;;:15;:27;;;;;;;;;;6732:39;:73;-1:-1:-1;;;;;6731:111:10;;;6724:118;;6667:182;:::o;7931:100::-;7980:44;7992:15;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9843:106;9895:47;9907:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13603:272;13686:17;13713:23;:40;13754:6;13713:48;;;;;;;;;;;;;-1:-1:-1;;;;;13713:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13713:48:10;13706:56;;;-1:-1:-1;;;;;;;13780:55:10;;:41;13800:13;13815:5;13780:19;:41::i;:::-;-1:-1:-1;;;;;;13780:55:10;;13772:96;;;;;-1:-1:-1;;;13772:96:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;13603:272;;;:::o;3454:117::-;3496:6;3521:43;3532:15;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:182;6330:6;6434:14;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6434:32:10;6398:31;;;-1:-1:-1;;;6398:31:10;;;;-1:-1:-1;;;;;6355:111:10;;;;6398:14;;:29;;:31;;;;;6434:32;;6398:31;;;;;;;:14;:31;;;;;;;;;;5522:113;5562:6;5587:41;5598:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9619:104;9670:46;9682:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8705:104;8756:46;8768:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3688:103;3723:6;3748:36;3759:15;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:475;1781:9;:16;1758:12;:19;:39;1750:91;;;;-1:-1:-1;;;1750:91:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:7;:14;1859:12;:19;:37;1851:89;;;;-1:-1:-1;;;1851:89:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:1;1950:11;;1971:26;;;;:11;;:26;;;;;:::i;:::-;-1:-1:-1;2007:20:10;;;;:8;;:20;;;;;:::i;:::-;-1:-1:-1;2037:16:10;;;;:6;;:16;;;;;:::i;:::-;;1585:475;;;:::o;4955:111::-;4994:6;5019:40;5030:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10733:321;10781:13;10797:12;:10;:12::i;:::-;10781:28;;10824:4;10820:169;;;10863:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10820:169;10946:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8263:100;8312:44;8324:15;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8369:102;8419:45;8431:15;:23;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4263:113;4303:6;4328:41;4339:15;:27;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10503:111;10561:46;10573:4;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11405:345;11465:13;11481:12;:10;:12::i;:::-;11465:28;;11508:16;11504:181;;;11559:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11504:181;11642:14;:29;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5754:111;5793:6;5818:40;5829:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2756:114;2800:6;2825:38;2836:4;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4148:109;4186:6;4211:39;4222:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5982:109;6020:6;6045:39;6056:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8037:104;8088:46;8100:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2996:103;3031:6;3056:36;3067:15;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11756:337;11813:13;11829:12;:10;:12::i;:::-;11813:28;;11992:14;:32;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11992:34:10;11942:33;;;-1:-1:-1;;;11942:33:10;;;;-1:-1:-1;;;;;11981:45:10;;;;;;;;;;11942:14;;:31;;:33;;;;;11992:34;;11942:33;;;;;;;:14;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11942:33:10;12050:27;;;-1:-1:-1;;;12050:27:10;;;;11941:34;;11931:45;;;;11930:97;;;;;12038:48;;12050:15;;:25;;:27;;;;;11942:33;;12050:27;;;;;;;:15;:27;;;;;;;;;;8591:108;8644:48;8656:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6479:182;6518:6;6622:14;:30;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6622:32:10;6586:31;;;-1:-1:-1;;;6586:31:10;;;;-1:-1:-1;;;;;6543:111:10;;;;6586:14;;:29;;:31;;;;;6622:32;;6586:31;;;;;;;:14;:31;;;;;;;;;;3339:109;3377:6;3402:39;3413:15;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10620:107;10676:44;10688:4;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10277:104;10328:46;10340:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:114;2450:6;2475:38;2486:4;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9729:108;9782:48;9794:15;:26;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10063:104;10114:46;10126:15;:24;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6097:188;6138:6;6244:14;:32;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6244:34:10;6206:33;;;-1:-1:-1;;;6206:33:10;;;;-1:-1:-1;;;;;6163:115:10;;;;6206:14;;:31;;:33;;;;;6244:34;;6206:33;;;;;;;:14;:33;;;;;;;;;;10173:98;10221:43;10233:15;:21;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13397:200;13454:6;13479:23;:40;13540:39;13560:12;13574:4;13540:19;:39::i;:::-;13533:47;;13479:111;;;;;;;;;;;;;-1:-1:-1;;;;;13479:111:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13479:111:10;;13397:200;-1:-1:-1;;13397:200:10:o;10387:110::-;10446:44;10458:5;:22;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12099:1147;12216:20;12250:1;-1:-1:-1;;;;;12239:12:10;;;12216:35;;12266:13;-1:-1:-1;;;;;12266:18:10;12283:1;12266:18;12262:978;;;12300:25;12312:5;12319;12300:11;:25::i;:::-;12262:978;;;-1:-1:-1;;12439:18:10;;12488:24;;;12413:23;12611:32;12439:18;12611:14;:32::i;:::-;12595:48;;12727:16;12746:23;:40;12820:7;12828:1;12820:9;-1:-1:-1;;;;;12787:42:10;12814:1;12802:8;-1:-1:-1;;;;;12789:21:10;12796:1;-1:-1:-1;;;;;12789:21:10;;12788:27;-1:-1:-1;;;;;12787:42:10;;;12746:84;;;;;;;;;;;;;-1:-1:-1;;;;;12746:84:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12746:84:10;12938:79;;;-1:-1:-1;;;12938:79:10;;-1:-1:-1;;;;;12989:21:10;;;12996:1;12989:21;-1:-1:-1;;12988:27:10;12979:37;;12938:79;;;;;;;12746:84;;-1:-1:-1;;;12938:23:10;;:40;;:79;;;;;12746:84;;12938:79;;;;;;;:23;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12938:79:10;13126:50;;;-1:-1:-1;;;13126:50:10;;-1:-1:-1;;;;;13076:22:10;;;13097:1;13089:9;;13076:22;;;13061:10;;13052:19;;13051:48;13126:50;;;;;;;;;12938:79;;-1:-1:-1;13051:48:10;;13126:23;;:40;;:50;;;;;12938:79;;13126:50;;;;;;;:23;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13126:50:10;;-1:-1:-1;13190:39:10;13202:16;13126:50;13190:11;:39::i;:::-;12262:978;;;;;;12099:1147;;;;:::o;14202:142::-;14265:6;14297:39;14317:12;14331:4;14297:19;:39::i;:::-;14290:47;;;14202:142;-1:-1:-1;;14202:142:10:o;14414:473::-;14506:6;14551:13;14532:32;;:6;14539:7;;14532:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:32;;;14524:76;;;;;-1:-1:-1;;;14524:76:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;14611:15;14629:11;14641:7;;14629:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14629:20:10;14611:38;;14659:12;14674:8;14683:7;;14674:17;;;;;;;;;;;;;;;;;;;;14701:9;;;;;;;14674:17;;;;;;;;;;;-1:-1:-1;14741:1:10;14730:12;;14729:19;14721:55;;;;;-1:-1:-1;;;14721:55:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;14806:8;-1:-1:-1;;;;;14794:20:10;:8;-1:-1:-1;;;;;14794:20:10;;14786:71;;;;-1:-1:-1;;;14786:71:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14875:5;14414:473;-1:-1:-1;;;;14414:473:10:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "2460200",
        "executionCost": "2650",
        "totalCost": "2462850"
      },
      "external": {
        "getRWIndex()": "1068",
        "initializeMemory(uint64[],bytes8[],bool[])": "infinite",
        "memoryRead(uint64)": "infinite",
        "memoryWrite(uint64,uint64)": "infinite",
        "readClintMtimecmp()": "infinite",
        "readHtifFromhost()": "infinite",
        "readHtifIConsole()": "infinite",
        "readHtifIHalt()": "infinite",
        "readHtifIYield()": "infinite",
        "readHtifTohost()": "infinite",
        "readIflags()": "infinite",
        "readIflagsH()": "infinite",
        "readIflagsPrv()": "infinite",
        "readIflagsX()": "infinite",
        "readIflagsY()": "infinite",
        "readIlrsc()": "infinite",
        "readMarchid()": "infinite",
        "readMcause()": "infinite",
        "readMcounteren()": "infinite",
        "readMcycle()": "infinite",
        "readMedeleg()": "infinite",
        "readMemory(uint64,uint64)": "infinite",
        "readMepc()": "infinite",
        "readMideleg()": "infinite",
        "readMie()": "infinite",
        "readMimpid()": "infinite",
        "readMinstret()": "infinite",
        "readMip()": "infinite",
        "readMisa()": "infinite",
        "readMscratch()": "infinite",
        "readMstatus()": "infinite",
        "readMtval()": "infinite",
        "readMtvec()": "infinite",
        "readMvendorid()": "infinite",
        "readPc()": "infinite",
        "readSatp()": "infinite",
        "readScause()": "infinite",
        "readScounteren()": "infinite",
        "readSepc()": "infinite",
        "readSscratch()": "infinite",
        "readStval()": "infinite",
        "readStvec()": "infinite",
        "readX(uint64)": "infinite",
        "resetMip(uint64)": "infinite",
        "setIflagsH(bool)": "infinite",
        "setIflagsX(bool)": "infinite",
        "setIflagsY(bool)": "infinite",
        "setMip(uint64)": "infinite",
        "setPriv(uint64)": "infinite",
        "writeClintMtimecmp(uint64)": "infinite",
        "writeHtifFromhost(uint64)": "infinite",
        "writeHtifTohost(uint64)": "infinite",
        "writeIflagsPrv(uint64)": "infinite",
        "writeIlrsc(uint64)": "infinite",
        "writeMcause(uint64)": "infinite",
        "writeMcounteren(uint64)": "infinite",
        "writeMcycle(uint64)": "infinite",
        "writeMedeleg(uint64)": "infinite",
        "writeMemory(uint64,uint64,uint64)": "infinite",
        "writeMepc(uint64)": "infinite",
        "writeMideleg(uint64)": "infinite",
        "writeMie(uint64)": "infinite",
        "writeMinstret(uint64)": "infinite",
        "writeMip(uint64)": "infinite",
        "writeMscratch(uint64)": "infinite",
        "writeMstatus(uint64)": "infinite",
        "writeMtval(uint64)": "infinite",
        "writeMtvec(uint64)": "infinite",
        "writePc(uint64)": "infinite",
        "writeSatp(uint64)": "infinite",
        "writeScause(uint64)": "infinite",
        "writeScounteren(uint64)": "infinite",
        "writeSepc(uint64)": "infinite",
        "writeSscratch(uint64)": "infinite",
        "writeStval(uint64)": "infinite",
        "writeStvec(uint64)": "infinite",
        "writeX(uint64,uint64)": "infinite"
      },
      "internal": {
        "memoryAccessManager(uint64,bool)": "infinite",
        "pureMemoryRead(uint64)": "infinite",
        "pureMemoryWrite(uint64,uint64)": "infinite"
      }
    },
    "methodIdentifiers": {
      "getRWIndex()": "080aa5d1",
      "initializeMemory(uint64[],bytes8[],bool[])": "a47594df",
      "memoryRead(uint64)": "fa644af5",
      "memoryWrite(uint64,uint64)": "8e32f35e",
      "readClintMtimecmp()": "6475e342",
      "readHtifFromhost()": "f2cf6ceb",
      "readHtifIConsole()": "b8fd205c",
      "readHtifIHalt()": "768365ea",
      "readHtifIYield()": "6f6c0e7d",
      "readHtifTohost()": "34970f18",
      "readIflags()": "c133b7ff",
      "readIflagsH()": "968644f0",
      "readIflagsPrv()": "f7ac913d",
      "readIflagsX()": "86099c54",
      "readIflagsY()": "d40d17c5",
      "readIlrsc()": "5dadd78a",
      "readMarchid()": "854dba40",
      "readMcause()": "51bb3615",
      "readMcounteren()": "9485871b",
      "readMcycle()": "daded5c2",
      "readMedeleg()": "6a72b27d",
      "readMemory(uint64,uint64)": "50cec2d5",
      "readMepc()": "1e5e6190",
      "readMideleg()": "a740dbc1",
      "readMie()": "cc92cbf7",
      "readMimpid()": "becdc10d",
      "readMinstret()": "28520b30",
      "readMip()": "a317ce9d",
      "readMisa()": "834aa4f6",
      "readMscratch()": "af63b2a8",
      "readMstatus()": "b5b98ed4",
      "readMtval()": "6cd24daf",
      "readMtvec()": "11cf3a22",
      "readMvendorid()": "5f824bf9",
      "readPc()": "650ca32b",
      "readSatp()": "1bf2f73d",
      "readScause()": "568b2702",
      "readScounteren()": "4ae9388b",
      "readSepc()": "18e504db",
      "readSscratch()": "9b7021ce",
      "readStval()": "2e963a80",
      "readStvec()": "0f84c046",
      "readX(uint64)": "6232e59c",
      "resetMip(uint64)": "15dd9c06",
      "setIflagsH(bool)": "a7458b95",
      "setIflagsX(bool)": "b27ec920",
      "setIflagsY(bool)": "3a48bb56",
      "setMip(uint64)": "45057ed7",
      "setPriv(uint64)": "54749af3",
      "writeClintMtimecmp(uint64)": "fbdb975d",
      "writeHtifFromhost(uint64)": "b2325aef",
      "writeHtifTohost(uint64)": "dd5c4a14",
      "writeIflagsPrv(uint64)": "cecdae53",
      "writeIlrsc(uint64)": "f21d94f8",
      "writeMcause(uint64)": "89365909",
      "writeMcounteren(uint64)": "2ca2bd16",
      "writeMcycle(uint64)": "5e5ca652",
      "writeMedeleg(uint64)": "575832df",
      "writeMemory(uint64,uint64,uint64)": "fd295abe",
      "writeMepc(uint64)": "28751b36",
      "writeMideleg(uint64)": "d2be7b6d",
      "writeMie(uint64)": "86676d43",
      "writeMinstret(uint64)": "10d74c7d",
      "writeMip(uint64)": "aaed4f07",
      "writeMscratch(uint64)": "0df3e295",
      "writeMstatus(uint64)": "f55c4d38",
      "writeMtval(uint64)": "f604edb8",
      "writeMtvec(uint64)": "9c872d02",
      "writePc(uint64)": "f9911587",
      "writeSatp(uint64)": "ab9779b7",
      "writeScause(uint64)": "78c49574",
      "writeScounteren(uint64)": "78ddee75",
      "writeSepc(uint64)": "57907837",
      "writeSscratch(uint64)": "5af47ca7",
      "writeStval(uint64)": "9c7b005d",
      "writeStvec(uint64)": "cbc446b1",
      "writeX(uint64,uint64)": "6dc95c2e"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getRWIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64[]\",\"name\":\"_rwPositions\",\"type\":\"uint64[]\"},{\"internalType\":\"bytes8[]\",\"name\":\"_rwValues\",\"type\":\"bytes8[]\"},{\"internalType\":\"bool[]\",\"name\":\"_isRead\",\"type\":\"bool[]\"}],\"name\":\"initializeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_readAddress\",\"type\":\"uint64\"}],\"name\":\"memoryRead\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_writeAddress\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_value\",\"type\":\"uint64\"}],\"name\":\"memoryWrite\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readClintMtimecmp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readHtifFromhost\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readHtifIConsole\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readHtifIHalt\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readHtifIYield\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readHtifTohost\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflags\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflagsH\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflagsPrv\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflagsX\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIflagsY\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readIlrsc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMarchid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMcause\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMcounteren\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMcycle\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMedeleg\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"paddr\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"wordSize\",\"type\":\"uint64\"}],\"name\":\"readMemory\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMepc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMideleg\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMie\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMimpid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMinstret\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMip\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMisa\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMscratch\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMstatus\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMtval\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMtvec\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readMvendorid\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readPc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readSatp\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readScause\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readScounteren\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readSepc\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readSscratch\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readStval\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readStvec\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"registerIndex\",\"type\":\"uint64\"}],\"name\":\"readX\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"mask\",\"type\":\"uint64\"}],\"name\":\"resetMip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"halt\",\"type\":\"bool\"}],\"name\":\"setIflagsH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isAutomaticYield\",\"type\":\"bool\"}],\"name\":\"setIflagsX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isManualYield\",\"type\":\"bool\"}],\"name\":\"setIflagsY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"mask\",\"type\":\"uint64\"}],\"name\":\"setMip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newPriv\",\"type\":\"uint64\"}],\"name\":\"setPriv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeClintMtimecmp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeHtifFromhost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeHtifTohost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"newPriv\",\"type\":\"uint64\"}],\"name\":\"writeIflagsPrv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeIlrsc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMcause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMcounteren\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMcycle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMedeleg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"paddr\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"wordSize\",\"type\":\"uint64\"}],\"name\":\"writeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMepc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMideleg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMie\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMinstret\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMscratch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMstatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMtval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeMtvec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writePc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeSatp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeScause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeScounteren\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeSepc\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeSscratch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeStval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeStvec\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"registerindex\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"value\",\"type\":\"uint64\"}],\"name\":\"writeX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Felipe Argento\",\"details\":\"Every read performed by mi.memoryRead or mi.write should be followed by anendianess swap from little endian to big endian. This is the case becauseEVM is big endian but RiscV is little endian.Reference: riscv-spec-v2.2.pdf - Preface to Version 2.0Reference: Ethereum yellowpaper - Version 69351d5Appendix H. Virtual Machine Specification\",\"kind\":\"dev\",\"methods\":{},\"title\":\"MemoryInteractor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Bridge between Memory Manager and Step\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MemoryInteractor.sol\":\"MemoryInteractor\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@cartesi/util/contracts/BitsManipulationLibrary.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\npragma solidity ^0.7.0;\\n\\n/// @title Bits Manipulation Library\\n/// @author Felipe Argento / Stephen Chen\\n/// @notice Implements bit manipulation helper functions\\nlibrary BitsManipulationLibrary {\\n\\n    /// @notice Sign extend a shorter signed value to the full int32\\n    /// @param number signed number to be extended\\n    /// @param wordSize number of bits of the signed number, ie, 8 for int8\\n    function int32SignExtension(int32 number, uint32 wordSize)\\n    public pure returns(int32)\\n    {\\n        uint32 uNumber = uint32(number);\\n        bool isNegative = ((uint64(1) << (wordSize - 1)) & uNumber) > 0;\\n        uint32 mask = ((uint32(2) ** wordSize) - 1);\\n\\n        if (isNegative) {\\n            uNumber = uNumber | ~mask;\\n        }\\n\\n        return int32(uNumber);\\n    }\\n\\n    /// @notice Sign extend a shorter signed value to the full uint64\\n    /// @param number signed number to be extended\\n    /// @param wordSize number of bits of the signed number, ie, 8 for int8\\n    function uint64SignExtension(uint64 number, uint64 wordSize)\\n    public pure returns(uint64)\\n    {\\n        uint64 uNumber = number;\\n        bool isNegative = ((uint64(1) << (wordSize - 1)) & uNumber) > 0;\\n        uint64 mask = ((uint64(2) ** wordSize) - 1);\\n\\n        if (isNegative) {\\n            uNumber = uNumber | ~mask;\\n        }\\n\\n        return uNumber;\\n    }\\n\\n    /// @notice Swap byte order of unsigned ints with 64 bytes\\n    /// @param num number to have bytes swapped\\n    function uint64SwapEndian(uint64 num) public pure returns(uint64) {\\n        uint64 output = ((num & 0x00000000000000ff) << 56)|\\n            ((num & 0x000000000000ff00) << 40)|\\n            ((num & 0x0000000000ff0000) << 24)|\\n            ((num & 0x00000000ff000000) << 8) |\\n            ((num & 0x000000ff00000000) >> 8) |\\n            ((num & 0x0000ff0000000000) >> 24)|\\n            ((num & 0x00ff000000000000) >> 40)|\\n            ((num & 0xff00000000000000) >> 56);\\n\\n        return output;\\n    }\\n\\n    /// @notice Swap byte order of unsigned ints with 32 bytes\\n    /// @param num number to have bytes swapped\\n    function uint32SwapEndian(uint32 num) public pure returns(uint32) {\\n        uint32 output = ((num >> 24) & 0xff) | ((num << 8) & 0xff0000) | ((num >> 8) & 0xff00) | ((num << 24) & 0xff000000);\\n        return output;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x95b97e0ae364fb91a3fdcf8132e7b61c745c23dd4e5beb980f396c05a69bbd08\",\"license\":\"Apache-2.0\"},\"contracts/CLINT.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\nimport \\\"./RiscVConstants.sol\\\";\\nimport \\\"./RealTimeClock.sol\\\";\\n\\n\\n/// @title CLINT\\n/// @author Felipe Argento\\n/// @notice Implements the Core Local Interruptor functionalities\\n/// @dev CLINT active addresses are 0x0200bff8(mtime) and 0x02004000(mtimecmp)\\n/// Reference: The Core of Cartesi, v1.02 - Section 3.2 - The Board\\nlibrary CLINT {\\n\\n    uint64 constant CLINT_MSIP0_ADDR = 0x02000000;\\n    uint64 constant CLINT_MTIMECMP_ADDR = 0x02004000;\\n    uint64 constant CLINT_MTIME_ADDR = 0x0200bff8;\\n\\n    /// @notice reads clint\\n    /// @param offset can be uint8, uint16, uint32 or uint64\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if read was successfull\\n    /// @return uint64 pval\\n    function clintRead(\\n        MemoryInteractor mi,\\n        uint64 offset,\\n        uint64 wordSize\\n    )\\n    public returns (bool, uint64)\\n    {\\n\\n        if (offset == CLINT_MSIP0_ADDR) {\\n            return clintReadMsip(mi, wordSize);\\n        } else if (offset == CLINT_MTIMECMP_ADDR) {\\n            return clintReadMtime(mi, wordSize);\\n        } else if (offset == CLINT_MTIME_ADDR) {\\n            return clintReadMtimecmp(mi, wordSize);\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    /// @notice write to clint\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param offset can be uint8, uint16, uint32 or uint64\\n    /// @param val to be written\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if write was successfull\\n    function clintWrite(\\n        MemoryInteractor mi,\\n        uint64 offset,\\n        uint64 val,\\n        uint64 wordSize)\\n    public returns (bool)\\n    {\\n        if (offset == CLINT_MSIP0_ADDR) {\\n            if (wordSize == 32) {\\n                if ((val & 1) != 0) {\\n                    mi.setMip(RiscVConstants.getMipMsipMask());\\n                } else {\\n                    mi.resetMip(RiscVConstants.getMipMsipMask());\\n                }\\n                return true;\\n            }\\n            return false;\\n        } else if (offset == CLINT_MTIMECMP_ADDR) {\\n            if (wordSize == 64) {\\n                mi.writeClintMtimecmp(val);\\n                mi.resetMip(RiscVConstants.getMipMsipMask());\\n                return true;\\n            }\\n            // partial mtimecmp is not supported\\n            return false;\\n        }\\n        return false;\\n    }\\n\\n    // internal functions\\n    function clintReadMsip(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 32) {\\n            if ((mi.readMip() & RiscVConstants.getMipMsipMask()) == RiscVConstants.getMipMsipMask()) {\\n                return(true, 1);\\n            } else {\\n                return (true, 0);\\n            }\\n        }\\n        return (false, 0);\\n    }\\n\\n    function clintReadMtime(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 64) {\\n            return (true, RealTimeClock.rtcCycleToTime(mi.readMcycle()));\\n        }\\n        return (false, 0);\\n    }\\n\\n    function clintReadMtimecmp(MemoryInteractor mi, uint64 wordSize)\\n    internal returns (bool, uint64)\\n    {\\n        if (wordSize == 64) {\\n            return (true, mi.readClintMtimecmp());\\n        }\\n        return (false, 0);\\n    }\\n\\n    // getters\\n    function getClintMtimecmp() public pure returns (uint64) {\\n        return CLINT_MTIMECMP_ADDR;\\n    }\\n}\\n\\n\\n\",\"keccak256\":\"0x89a1c4305fc05859156cbd73380aa63ce16a48aba24ce44d4b862b5f415d6362\",\"license\":\"Apache-2.0\"},\"contracts/HTIF.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n// @title HTIF\\npragma solidity ^0.7.0;\\n\\nimport \\\"./MemoryInteractor.sol\\\";\\n\\n\\n/// @title HTIF\\n/// @author Felipe Argento\\n/// @notice Host-Target-Interface (HTIF) mediates communcation with external world.\\n/// @dev Its active addresses are 0x40000000(tohost) and 0x40000008(from host)\\n/// Reference: The Core of Cartesi, v1.02 - Section 3.2 - The Board\\nlibrary HTIF {\\n\\n    uint64 constant HTIF_TOHOST_ADDR_CONST = 0x40008000;\\n    uint64 constant HTIF_FROMHOST_ADDR_CONST = 0x40008008;\\n    uint64 constant HTIF_IHALT_ADDR_CONST = 0x40008010;\\n    uint64 constant HTIF_ICONSOLE_ADDR_CONST = 0x40008018;\\n    uint64 constant HTIF_IYIELD_ADDR_CONST = 0x40008020;\\n\\n    // [c++] enum HTIF_devices\\n    uint64 constant HTIF_DEVICE_HALT = 0;        //< Used to halt machine\\n    uint64 constant HTIF_DEVICE_CONSOLE = 1;     //< Used for console input and output\\n    uint64 constant HTIF_DEVICE_YIELD = 2;       //< Used to yield control back to host\\n\\n    // [c++] enum HTIF_commands\\n    uint64 constant HTIF_HALT_HALT = 0;\\n    uint64 constant HTIF_CONSOLE_GETCHAR = 0;\\n    uint64 constant HTIF_CONSOLE_PUTCHAR = 1;\\n    uint64 constant HTIF_YIELD_AUTOMATIC = 0;\\n    uint64 constant HTIF_YIELD_MANUAL = 1;\\n\\n    /// @notice reads htif\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param addr address to read from\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if read was successfull\\n    /// @return uint64 pval\\n    function htifRead(\\n        MemoryInteractor mi,\\n        uint64 addr,\\n        uint64 wordSize\\n    )\\n    public returns (bool, uint64)\\n    {\\n        // HTIF reads must be aligned and 8 bytes\\n        if (wordSize != 64 || (addr & 7) != 0) {\\n            return (false, 0);\\n        }\\n\\n        if (addr == HTIF_TOHOST_ADDR_CONST) {\\n            return (true, mi.readHtifTohost());\\n        } else if (addr == HTIF_FROMHOST_ADDR_CONST) {\\n            return (true, mi.readHtifFromhost());\\n        } else {\\n            return (false, 0);\\n        }\\n    }\\n\\n    /// @notice write htif\\n    /// @param mi Memory Interactor with which Step function is interacting.\\n    /// @param addr address to read from\\n    /// @param val value to be written\\n    /// @param wordSize can be uint8, uint16, uint32 or uint64\\n    /// @return bool if write was successfull\\n    function htifWrite(\\n        MemoryInteractor mi,\\n        uint64 addr,\\n        uint64 val,\\n        uint64 wordSize\\n    )\\n    public returns (bool)\\n    {\\n        // HTIF writes must be aligned and 8 bytes\\n        if (wordSize != 64 || (addr & 7) != 0) {\\n            return false;\\n        }\\n        if (addr == HTIF_TOHOST_ADDR_CONST) {\\n            return htifWriteTohost(mi, val);\\n        } else if (addr == HTIF_FROMHOST_ADDR_CONST) {\\n            mi.writeHtifFromhost(val);\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    // Internal functions\\n    function htifWriteFromhost(MemoryInteractor mi, uint64 val)\\n    internal returns (bool)\\n    {\\n        mi.writeHtifFromhost(val);\\n        // TO-DO: check if h is interactive? reset from host? pollConsole?\\n        return true;\\n    }\\n\\n    function htifWriteTohost(MemoryInteractor mi, uint64 tohost)\\n    internal returns (bool)\\n    {\\n        uint32 device = uint32(tohost >> 56);\\n        uint32 cmd = uint32((tohost >> 48) & 0xff);\\n        uint64 payload = uint32((tohost & (~(uint256(1) >> 16))));\\n\\n        mi.writeHtifTohost(tohost);\\n\\n        if (device == HTIF_DEVICE_HALT) {\\n            return htifHalt(\\n                mi,\\n                cmd,\\n                payload);\\n        } else if (device == HTIF_DEVICE_CONSOLE) {\\n            return htifConsole(\\n                mi,\\n                cmd,\\n                payload);\\n        } else if (device == HTIF_DEVICE_YIELD) {\\n            return htifYield(\\n                mi,\\n                cmd,\\n                payload);\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    function htifHalt(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {\\n        if (cmd == HTIF_HALT_HALT && ((payload & 1) == 1) ) {\\n            //set iflags to halted\\n            mi.setIflagsH(true);\\n        }\\n        return true;\\n    }\\n\\n    function htifYield(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {\\n        // If yield command is enabled, yield\\n        if ((mi.readHtifIYield() >> cmd) & 1 == 1) {\\n            if (cmd == HTIF_YIELD_MANUAL) {\\n                mi.setIflagsY(true);\\n            } else {\\n                mi.setIflagsX(true);\\n            }\\n            mi.writeHtifFromhost((HTIF_DEVICE_YIELD << 56) | cmd << 48);\\n        }\\n\\n        return true;\\n    }\\n\\n    function htifConsole(\\n        MemoryInteractor mi,\\n        uint64 cmd,\\n        uint64 payload)\\n    internal returns (bool)\\n    {        \\n        // If console command is enabled, aknowledge it\\n        if ((mi.readHtifIConsole() >> cmd) & 1 == 1) {\\n             if (cmd == HTIF_CONSOLE_PUTCHAR) { \\n                // TO-DO: what to do in the blockchain? Generate event?\\n                mi.writeHtifFromhost((HTIF_DEVICE_CONSOLE << 56) | cmd << 48);\\n            } else if (cmd == HTIF_CONSOLE_GETCHAR) { \\n                // In blockchain, this command will never be enabled as there is no way to input the same character\\n                // to every participant in a dispute: where would character come from? So if the code reached here in the\\n                // blockchain, there must be some serious bug\\n                revert(\\\"Machine is in interactive mode. This is a fatal bug in the Dapp\\\");\\n            }\\n            // Unknown HTIF console commands are silently ignored\\n        }\\n        \\n        return true;\\n    }\\n\\n    // getters\\n    function getHtifToHostAddr() public pure returns (uint64) {\\n        return HTIF_TOHOST_ADDR_CONST;\\n    }\\n\\n    function getHtifFromHostAddr() public pure returns (uint64) {\\n        return HTIF_FROMHOST_ADDR_CONST;\\n    }\\n\\n    function getHtifIHaltAddr() public pure returns (uint64) {\\n        return HTIF_IHALT_ADDR_CONST;\\n    }\\n\\n    function getHtifIConsoleAddr() public pure returns (uint64) {\\n        return HTIF_ICONSOLE_ADDR_CONST;\\n    }\\n\\n    function getHtifIYieldAddr() public pure returns (uint64) {\\n        return HTIF_IYIELD_ADDR_CONST;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x2129a49f976812582aaa169835bbe1d148b5850800598c7970cacc4efda32a7a\",\"license\":\"Apache-2.0\"},\"contracts/MemoryInteractor.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n/// @title MemoryInteractor.sol\\npragma solidity ^0.7.0;\\n\\nimport \\\"./ShadowAddresses.sol\\\";\\nimport \\\"./HTIF.sol\\\";\\nimport \\\"./CLINT.sol\\\";\\nimport \\\"./RiscVConstants.sol\\\";\\nimport \\\"@cartesi/util/contracts/BitsManipulationLibrary.sol\\\";\\n\\n/// @title MemoryInteractor\\n/// @author Felipe Argento\\n/// @notice Bridge between Memory Manager and Step\\n/// @dev Every read performed by mi.memoryRead or mi.write should be followed by an\\n/// @dev endianess swap from little endian to big endian. This is the case because\\n/// @dev EVM is big endian but RiscV is little endian.\\n/// @dev Reference: riscv-spec-v2.2.pdf - Preface to Version 2.0\\n/// @dev Reference: Ethereum yellowpaper - Version 69351d5\\n/// @dev    Appendix H. Virtual Machine Specification\\ncontract MemoryInteractor {\\n\\n    uint256 rwIndex; // read write index\\n    uint64[] rwPositions; // read write positions\\n    bytes8[] rwValues; // read write values\\n    bool[] isRead; // true if access is read, false if its write\\n\\n    function initializeMemory(\\n        uint64[] memory _rwPositions,\\n        bytes8[] memory _rwValues,\\n        bool[] memory _isRead\\n    ) virtual public\\n    {\\n        require(_rwPositions.length == _rwValues.length, \\\"Read/write arrays are not the same size\\\");\\n        require(_rwPositions.length == _isRead.length, \\\"Read/write arrays are not the same size\\\");\\n        rwIndex = 0;\\n        rwPositions = _rwPositions;\\n        rwValues = _rwValues;\\n        isRead = _isRead;\\n    }\\n\\n    function getRWIndex() public view returns (uint256) {\\n        return rwIndex;\\n    }\\n    // Reads\\n    function readX(uint64 registerIndex) public returns (uint64) {\\n        return memoryRead(registerIndex * 8);\\n    }\\n\\n    function readClintMtimecmp() public returns (uint64) {\\n        return memoryRead(CLINT.getClintMtimecmp());\\n    }\\n\\n    function readHtifFromhost() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifFromHostAddr());\\n    }\\n\\n    function readHtifTohost() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifToHostAddr());\\n    }\\n\\n    function readHtifIHalt() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifIHaltAddr());\\n    }\\n\\n    function readHtifIConsole() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifIConsoleAddr());\\n    }    \\n\\n    function readHtifIYield() public returns (uint64) {\\n        return memoryRead(HTIF.getHtifIYieldAddr());\\n    }\\n\\n    function readMie() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMie());\\n    }\\n\\n    function readMcause() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcause());\\n    }\\n\\n    function readMinstret() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMinstret());\\n    }\\n\\n    function readMcycle() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcycle());\\n    }\\n\\n    function readMcounteren() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMcounteren());\\n    }\\n\\n    function readMepc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMepc());\\n    }\\n\\n    function readMip() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMip());\\n    }\\n\\n    function readMtval() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMtval());\\n    }\\n\\n    function readMvendorid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMvendorid());\\n    }\\n\\n    function readMarchid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMarchid());\\n    }\\n\\n    function readMimpid() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMimpid());\\n    }\\n\\n    function readMscratch() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMscratch());\\n    }\\n\\n    function readSatp() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSatp());\\n    }\\n\\n    function readScause() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getScause());\\n    }\\n\\n    function readSepc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSepc());\\n    }\\n\\n    function readScounteren() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getScounteren());\\n    }\\n\\n    function readStval() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getStval());\\n    }\\n\\n    function readMideleg() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMideleg());\\n    }\\n\\n    function readMedeleg() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMedeleg());\\n    }\\n\\n    function readMtvec() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMtvec());\\n    }\\n\\n    function readIlrsc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getIlrsc());\\n    }\\n\\n    function readPc() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getPc());\\n    }\\n\\n    function readSscratch() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getSscratch());\\n    }\\n\\n    function readStvec() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getStvec());\\n    }\\n\\n    function readMstatus() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMstatus());\\n    }\\n\\n    function readMisa() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getMisa());\\n    }\\n\\n    function readIflags() public returns (uint64) {\\n        return memoryRead(ShadowAddresses.getIflags());\\n    }\\n\\n    function readIflagsPrv() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsPrvMask()) >> RiscVConstants.getIflagsPrvShift();\\n    }\\n\\n    function readIflagsH() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsHMask()) >> RiscVConstants.getIflagsHShift();\\n    }\\n\\n    function readIflagsY() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsYMask()) >> RiscVConstants.getIflagsYShift();\\n    }\\n\\n    function readIflagsX() public returns (uint64) {\\n        return (memoryRead(ShadowAddresses.getIflags()) & RiscVConstants.getIflagsXMask()) >> RiscVConstants.getIflagsXShift();\\n    }\\n\\n    function readMemory(uint64 paddr, uint64 wordSize) public returns (uint64) {\\n        // get relative address from unaligned paddr\\n        uint64 closestStartAddr = paddr & uint64(~7);\\n        uint64 relAddr = paddr - closestStartAddr;\\n\\n        // value just like its on MM, without endianess swap\\n        uint64 val = pureMemoryRead(closestStartAddr);\\n\\n        // mask to clean a piece of the value that was on memory\\n        uint64 valueMask = BitsManipulationLibrary.uint64SwapEndian(((uint64(2) ** wordSize) - 1) << relAddr*8);\\n        val = BitsManipulationLibrary.uint64SwapEndian(val & valueMask) >> relAddr*8;\\n        return val;\\n    }\\n\\n    // Sets\\n    function setPriv(uint64 newPriv) public {\\n        writeIflagsPrv(newPriv);\\n        writeIlrsc(uint64(-1)); // invalidate reserved address\\n    }\\n\\n    function setMip(uint64 mask) public {\\n        uint64 mip = readMip();\\n        mip |= mask;\\n        writeMip(mip);\\n    }\\n\\n    function resetMip(uint64 mask) public {\\n        uint64 mip = readMip();\\n        mip &= ~mask;\\n        writeMip(mip);\\n    }\\n\\n    // Writes\\n    function writeMie(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMie(), value);\\n    }\\n\\n    function writeStvec(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getStvec(), value);\\n    }\\n\\n    function writeSscratch(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSscratch(), value);\\n    }\\n\\n    function writeMip(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMip(), value);\\n    }\\n\\n    function writeSatp(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSatp(), value);\\n    }\\n\\n    function writeMedeleg(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMedeleg(), value);\\n    }\\n\\n    function writeMideleg(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMideleg(), value);\\n    }\\n\\n    function writeMtvec(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMtvec(), value);\\n    }\\n\\n    function writeMcounteren(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcounteren(), value);\\n    }\\n\\n    function writeMcycle(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcycle(), value);\\n    }\\n\\n    function writeMinstret(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMinstret(), value);\\n    }\\n\\n    function writeMscratch(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMscratch(), value);\\n    }\\n\\n    function writeScounteren(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getScounteren(), value);\\n    }\\n\\n    function writeScause(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getScause(), value);\\n    }\\n\\n    function writeSepc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getSepc(), value);\\n    }\\n\\n    function writeStval(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getStval(), value);\\n    }\\n\\n    function writeMstatus(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMstatus(), value);\\n    }\\n\\n    function writeMcause(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMcause(), value);\\n    }\\n\\n    function writeMepc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMepc(), value);\\n    }\\n\\n    function writeMtval(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getMtval(), value);\\n    }\\n\\n    function writePc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getPc(), value);\\n    }\\n\\n    function writeIlrsc(uint64 value) public {\\n        memoryWrite(ShadowAddresses.getIlrsc(), value);\\n    }\\n\\n    function writeClintMtimecmp(uint64 value) public {\\n        memoryWrite(CLINT.getClintMtimecmp(), value);\\n    }\\n\\n    function writeHtifFromhost(uint64 value) public {\\n        memoryWrite(HTIF.getHtifFromHostAddr(), value);\\n    }\\n\\n    function writeHtifTohost(uint64 value) public {\\n        memoryWrite(HTIF.getHtifToHostAddr(), value);\\n    }\\n\\n    function setIflagsH(bool halt) public {\\n        uint64 iflags = readIflags();\\n\\n        if (halt) {\\n            iflags = (iflags | RiscVConstants.getIflagsHMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsHMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function setIflagsY(bool isManualYield) public {\\n        uint64 iflags = readIflags();\\n\\n        if (isManualYield) {\\n            iflags = (iflags | RiscVConstants.getIflagsYMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsYMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function setIflagsX(bool isAutomaticYield) public {\\n        uint64 iflags = readIflags();\\n\\n        if (isAutomaticYield) {\\n            iflags = (iflags | RiscVConstants.getIflagsXMask());\\n        } else {\\n            iflags = (iflags & ~RiscVConstants.getIflagsXMask());\\n        }\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function writeIflagsPrv(uint64 newPriv) public {\\n        uint64 iflags = readIflags();\\n\\n        // Clears bits 3 and 2 of iflags and use or to set new value\\n        iflags = (iflags & (~RiscVConstants.getIflagsPrvMask())) | (newPriv << RiscVConstants.getIflagsPrvShift());\\n\\n        memoryWrite(ShadowAddresses.getIflags(), iflags);\\n    }\\n\\n    function writeMemory(\\n        uint64 paddr,\\n        uint64 value,\\n        uint64 wordSize\\n    ) public\\n    {\\n        uint64 numberOfBytes = wordSize / 8;\\n\\n        if (numberOfBytes == 8) {\\n            memoryWrite(paddr, value);\\n        } else {\\n            // get relative address from unaligned paddr\\n            uint64 closestStartAddr = paddr & uint64(~7);\\n            uint64 relAddr = paddr - closestStartAddr;\\n\\n            // oldvalue just like its on MM, without endianess swap\\n            uint64 oldVal = pureMemoryRead(closestStartAddr);\\n\\n            // Mask to clean a piece of the value that was on memory\\n            uint64 valueMask = BitsManipulationLibrary.uint64SwapEndian(((uint64(2) ** wordSize) - 1) << relAddr*8);\\n\\n            // value is big endian, need to swap before further operation\\n            uint64 valueSwap = BitsManipulationLibrary.uint64SwapEndian(value & ((uint64(2) ** wordSize) - 1));\\n\\n            uint64 newvalue = ((oldVal & ~valueMask) | (valueSwap >> relAddr*8));\\n\\n            newvalue = BitsManipulationLibrary.uint64SwapEndian(newvalue);\\n            memoryWrite(closestStartAddr, newvalue);\\n        }\\n    }\\n\\n    function writeX(uint64 registerindex, uint64 value) public {\\n        memoryWrite(registerindex * 8, value);\\n    }\\n\\n    // Internal functions\\n    function memoryRead(uint64 _readAddress) public returns (uint64) {\\n        return BitsManipulationLibrary.uint64SwapEndian(\\n            uint64(memoryAccessManager(_readAddress, true))\\n        );\\n    }\\n\\n    function memoryWrite(uint64 _writeAddress, uint64 _value) virtual public {\\n        bytes8 bytesvalue = bytes8(BitsManipulationLibrary.uint64SwapEndian(_value));\\n        require(memoryAccessManager(_writeAddress, false) == bytesvalue, \\\"Written value does not match\\\");\\n    }\\n\\n    // Memory Write without endianess swap\\n    function pureMemoryWrite(uint64 _writeAddress, uint64 _value) virtual internal {\\n        require(\\n            memoryAccessManager(_writeAddress, false) == bytes8(_value),\\n            \\\"Written value does not match\\\"\\n        );\\n    }\\n\\n    // Memory Read without endianess swap\\n    function pureMemoryRead(uint64 _readAddress) internal returns (uint64) {\\n        return uint64(memoryAccessManager(_readAddress, true));\\n    }\\n\\n   // Private functions\\n\\n    // takes care of read/write access\\n    function memoryAccessManager(uint64 _address, bool _accessIsRead) internal virtual returns (bytes8) {\\n        require(isRead[rwIndex] == _accessIsRead, \\\"Access was not the correct type\\\");\\n\\n        uint64 position = rwPositions[rwIndex];\\n        bytes8 value = rwValues[rwIndex];\\n        rwIndex++;\\n\\n        require((position & 7) == 0, \\\"Position is not aligned\\\");\\n        require(position == _address, \\\"Position and read address do not match\\\");\\n\\n        return value;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x1b5340143c5c357dedded50381cf60c14c0f9bbf3a1aaadb8c76b4bb8782ad0c\",\"license\":\"Apache-2.0\"},\"contracts/RealTimeClock.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\n/// @title RealTimeClock\\npragma solidity ^0.7.0;\\n\\n/// @title RealTimeClock\\n/// @author Felipe Argento\\n/// @notice Real Time clock simulator\\nlibrary RealTimeClock {\\n    uint64 constant RTC_FREQ_DIV = 100;\\n    \\n    /// @notice Converts from cycle count to time count\\n    /// @param cycle Cycle count\\n    /// @return Time count\\n    function rtcCycleToTime(uint64 cycle) public pure returns (uint64) {\\n        return cycle / RTC_FREQ_DIV;\\n    }\\n\\n    /// @notice Converts from time count to cycle count\\n    /// @param  time Time count\\n    /// @return Cycle count\\n    function rtcTimeToCycle(uint64 time) public pure returns (uint64) {\\n        return time * RTC_FREQ_DIV;\\n    }\\n\\n    /// @notice Returns whether the cycle is a RTC tick\\n    /// @param cycle Cycle count\\n    function rtcIsTick(uint64 cycle) public pure returns (bool) {\\n        return (cycle % RTC_FREQ_DIV) == 0;\\n    }\\n}\\n\",\"keccak256\":\"0x0513dabae4453feab3a4009eef3ddc7ba4719ac6577140c156c7afc0520acf27\",\"license\":\"Apache-2.0\"},\"contracts/RiscVConstants.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\n/// @title RiscVConstants\\n/// @author Felipe Argento\\n/// @notice Defines getters for important constants\\nlibrary RiscVConstants {\\n    //iflags shifts\\n    function getIflagsHShift()  public pure returns(uint64) {return 0;}\\n    function getIflagsYShift()  public pure returns(uint64) {return 1;}\\n    function getIflagsXShift()  public pure returns(uint64) {return 2;}\\n    function getIflagsPrvShift()  public pure returns(uint64) {return 3;}\\n\\n    //iflags masks\\n    function getIflagsHMask()  public pure returns(uint64) {return uint64(1) << getIflagsHShift();}\\n    function getIflagsYMask()  public pure returns(uint64) {return uint64(1) << getIflagsYShift();}\\n    function getIflagsXMask()  public pure returns(uint64) {return uint64(1) << getIflagsXShift();}\\n    function getIflagsPrvMask()  public pure returns(uint64) {return uint64(3) << getIflagsPrvShift();}\\n\\n    //general purpose\\n    function getXlen() public pure returns(uint64) {return 64;}\\n    function getMxl()  public pure returns(uint64) {return 2;}\\n\\n    //privilege levels\\n    function getPrvU() public pure returns(uint64) {return 0;}\\n    function getPrvS() public pure returns(uint64) {return 1;}\\n    function getPrvH() public pure returns(uint64) {return 2;}\\n    function getPrvM() public pure returns(uint64) {return 3;}\\n\\n    //mstatus shifts\\n    function getMstatusUieShift()  public pure returns(uint64) {return 0;}\\n    function getMstatusSieShift()  public pure returns(uint64) {return 1;}\\n    function getMstatusHieShift()  public pure returns(uint64) {return 2;}\\n    function getMstatusMieShift()  public pure returns(uint64) {return 3;}\\n    function getMstatusUpieShift() public pure returns(uint64) {return 4;}\\n    function getMstatusSpieShift() public pure returns(uint64) {return 5;}\\n    function getMstatusMpieShift() public pure returns(uint64) {return 7;}\\n    function getMstatusSppShift()  public pure returns(uint64) {return 8;}\\n    function getMstatusMppShift()  public pure returns(uint64) {return 11;}\\n    function getMstatusFsShift()   public pure returns(uint64) {return 13;}\\n\\n    function getMstatusXsShift()   public pure returns(uint64) {return 15;}\\n    function getMstatusMprvShift() public pure returns(uint64) {return 17;}\\n    function getMstatusSumShift()  public pure returns(uint64) {return 18;}\\n    function getMstatusMxrShift()  public pure returns(uint64) {return 19;}\\n    function getMstatusTvmShift()  public pure returns(uint64) {return 20;}\\n    function getMstatusTwShift()   public pure returns(uint64) {return 21;}\\n    function getMstatusTsrShift()  public pure returns(uint64) {return 22;}\\n\\n\\n    function getMstatusUxlShift()  public pure returns(uint64) {return 32;}\\n    function getMstatusSxlShift()  public pure returns(uint64) {return 34;}\\n\\n    function getMstatusSdShift()   public pure returns(uint64) {return getXlen() - 1;}\\n\\n    //mstatus masks\\n    function getMstatusUieMask()  public pure returns(uint64) {return (uint64(1) << getMstatusUieShift());}\\n    function getMstatusSieMask()  public pure returns(uint64) {return uint64(1) << getMstatusSieShift();}\\n    function getMstatusMieMask()  public pure returns(uint64) {return uint64(1) << getMstatusMieShift();}\\n    function getMstatusUpieMask() public pure returns(uint64) {return uint64(1) << getMstatusUpieShift();}\\n    function getMstatusSpieMask() public pure returns(uint64) {return uint64(1) << getMstatusSpieShift();}\\n    function getMstatusMpieMask() public pure returns(uint64) {return uint64(1) << getMstatusMpieShift();}\\n    function getMstatusSppMask()  public pure returns(uint64) {return uint64(1) << getMstatusSppShift();}\\n    function getMstatusMppMask()  public pure returns(uint64) {return uint64(3) << getMstatusMppShift();}\\n    function getMstatusFsMask()   public pure returns(uint64) {return uint64(3) << getMstatusFsShift();}\\n    function getMstatusXsMask()   public pure returns(uint64) {return uint64(3) << getMstatusXsShift();}\\n    function getMstatusMprvMask() public pure returns(uint64) {return uint64(1) << getMstatusMprvShift();}\\n    function getMstatusSumMask()  public pure returns(uint64) {return uint64(1) << getMstatusSumShift();}\\n    function getMstatusMxrMask()  public pure returns(uint64) {return uint64(1) << getMstatusMxrShift();}\\n    function getMstatusTvmMask()  public pure returns(uint64) {return uint64(1) << getMstatusTvmShift();}\\n    function getMstatusTwMask()   public pure returns(uint64) {return uint64(1) << getMstatusTwShift();}\\n    function getMstatusTsrMask()  public pure returns(uint64) {return uint64(1) << getMstatusTsrShift();}\\n\\n    function getMstatusUxlMask()  public pure returns(uint64) {return uint64(3) << getMstatusUxlShift();}\\n    function getMstatusSxlMask()  public pure returns(uint64) {return uint64(3) << getMstatusSxlShift();}\\n    function getMstatusSdMask()   public pure returns(uint64) {return uint64(1) << getMstatusSdShift();}\\n\\n    // mstatus read/writes\\n    function getMstatusWMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusMieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusMpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusMppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusMprvMask() |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusTvmMask()  |\\n            getMstatusTwMask()   |\\n            getMstatusTsrMask()\\n        );\\n    }\\n\\n    function getMstatusRMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusMieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusMpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusMppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusMprvMask() |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusTvmMask()  |\\n            getMstatusTwMask()   |\\n            getMstatusTsrMask()  |\\n            getMstatusUxlMask()  |\\n            getMstatusSxlMask()  |\\n            getMstatusSdMask()\\n        );\\n    }\\n\\n    // sstatus read/writes\\n    function getSstatusWMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()\\n        );\\n    }\\n\\n    function getSstatusRMask() public pure returns(uint64) {\\n        return (\\n            getMstatusUieMask()  |\\n            getMstatusSieMask()  |\\n            getMstatusUpieMask() |\\n            getMstatusSpieMask() |\\n            getMstatusSppMask()  |\\n            getMstatusFsMask()   |\\n            getMstatusSumMask()  |\\n            getMstatusMxrMask()  |\\n            getMstatusUxlMask()  |\\n            getMstatusSdMask()\\n        );\\n    }\\n\\n    // mcause for exceptions\\n    function getMcauseInsnAddressMisaligned() public pure returns(uint64) {return 0x0;} ///< instruction address misaligned\\n    function getMcauseInsnAccessFault() public pure returns(uint64) {return 0x1;} ///< instruction access fault\\n    function getMcauseIllegalInsn() public pure returns(uint64) {return 0x2;} ///< illegal instruction\\n    function getMcauseBreakpoint() public pure returns(uint64) {return 0x3;} ///< breakpoint\\n    function getMcauseLoadAddressMisaligned() public pure returns(uint64) {return 0x4;} ///< load address misaligned\\n    function getMcauseLoadAccessFault() public pure returns(uint64) {return 0x5;} ///< load access fault\\n    function getMcauseStoreAmoAddressMisaligned() public pure returns(uint64) {return 0x6;} ///< store/amo address misaligned\\n    function getMcauseStoreAmoAccessFault() public pure returns(uint64) {return 0x7;} ///< store/amo access fault\\n    ///< environment call (+0: from u-mode, +1: from s-mode, +3: from m-mode)\\n    function getMcauseEcallBase() public pure returns(uint64) { return 0x8;}\\n    function getMcauseFetchPageFault() public pure returns(uint64) {return 0xc;} ///< instruction page fault\\n    function getMcauseLoadPageFault() public pure returns(uint64) {return 0xd;} ///< load page fault\\n    function getMcauseStoreAmoPageFault() public pure returns(uint64) {return 0xf;} ///< store/amo page fault\\n\\n    function getMcauseInterruptFlag() public pure returns(uint64) {return uint64(1) << (getXlen() - 1);} ///< interrupt flag\\n\\n    // mcounteren constants\\n    function getMcounterenCyShift() public pure returns(uint64) {return 0;}\\n    function getMcounterenTmShift() public pure returns(uint64) {return 1;}\\n    function getMcounterenIrShift() public pure returns(uint64) {return 2;}\\n\\n    function getMcounterenCyMask() public pure returns(uint64) {return uint64(1) << getMcounterenCyShift();}\\n    function getMcounterenTmMask() public pure returns(uint64) {return uint64(1) << getMcounterenTmShift();}\\n    function getMcounterenIrMask() public pure returns(uint64) {return uint64(1) << getMcounterenIrShift();}\\n\\n    function getMcounterenRwMask() public pure returns(uint64) {return getMcounterenCyMask() | getMcounterenTmMask() | getMcounterenIrMask();}\\n    function getScounterenRwMask() public pure returns(uint64) {return getMcounterenRwMask();}\\n\\n    //paging constants\\n    function getPgShift() public pure returns(uint64) {return 12;}\\n    function getPgMask()  public pure returns(uint64) {((uint64(1) << getPgShift()) - 1);}\\n\\n    function getPteVMask() public pure returns(uint64) {return (1 << 0);}\\n    function getPteUMask() public pure returns(uint64) {return (1 << 4);}\\n    function getPteAMask() public pure returns(uint64) {return (1 << 6);}\\n    function getPteDMask() public pure returns(uint64) {return (1 << 7);}\\n\\n    function getPteXwrReadShift() public pure returns(uint64) {return 0;}\\n    function getPteXwrWriteShift() public pure returns(uint64) {return 1;}\\n    function getPteXwrCodeShift() public pure returns(uint64) {return 2;}\\n\\n    // page masks\\n    function getPageNumberShift() public pure returns(uint64) {return 12;}\\n\\n    function getPageOffsetMask() public pure returns(uint64) {return ((uint64(1) << getPageNumberShift()) - 1);}\\n\\n    // mip shifts:\\n    function getMipUsipShift() public pure returns(uint64) {return 0;}\\n    function getMipSsipShift() public pure returns(uint64) {return 1;}\\n    function getMipMsipShift() public pure returns(uint64) {return 3;}\\n    function getMipUtipShift() public pure returns(uint64) {return 4;}\\n    function getMipStipShift() public pure returns(uint64) {return 5;}\\n    function getMipMtipShift() public pure returns(uint64) {return 7;}\\n    function getMipUeipShift() public pure returns(uint64) {return 8;}\\n    function getMipSeipShift() public pure returns(uint64) {return 9;}\\n    function getMipMeipShift() public pure returns(uint64) {return 11;}\\n\\n    function getMipUsipMask() public pure returns(uint64) {return uint64(1) << getMipUsipShift();}\\n    function getMipSsipMask() public pure returns(uint64) {return uint64(1) << getMipSsipShift();}\\n    function getMipMsipMask() public pure returns(uint64) {return uint64(1) << getMipMsipShift();}\\n    function getMipUtipMask() public pure returns(uint64) {return uint64(1) << getMipUtipShift();}\\n    function getMipStipMask() public pure returns(uint64) {return uint64(1) << getMipStipShift();}\\n    function getMipMtipMask() public pure returns(uint64) {return uint64(1) << getMipMtipShift();}\\n    function getMipUeipMask() public pure returns(uint64) {return uint64(1) << getMipUeipShift();}\\n    function getMipSeipMask() public pure returns(uint64) {return uint64(1) << getMipSeipShift();}\\n    function getMipMeipMask() public pure returns(uint64) {return uint64(1) << getMipMeipShift();}\\n}\\n\",\"keccak256\":\"0xbcb9348cf546206050eda0969c2fb2afb4208463d265dea15aaff26ba5dcc288\",\"license\":\"Apache-2.0\"},\"contracts/ShadowAddresses.sol\":{\"content\":\"// Copyright 2019 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n\\n\\npragma solidity ^0.7.0;\\n\\n\\n/// @title ShadowAddresses\\n/// @author Felipe Argento\\n/// @notice Defines the processor state. Memory-mapped to the lowest 512 bytes in pm\\n/// @dev Defined on Cartesi techpaper version 1.02 - Section 3 - table 2 \\n/// Source: https://cartesi.io/cartesi_whitepaper.pdf \\nlibrary ShadowAddresses {\\n    uint64 constant PC         = 0x100;\\n    uint64 constant MVENDORID  = 0x108;\\n    uint64 constant MARCHID    = 0x110;\\n    uint64 constant MIMPID     = 0x118;\\n    uint64 constant MCYCLE     = 0x120;\\n    uint64 constant MINSTRET   = 0x128;\\n    uint64 constant MSTATUS    = 0x130;\\n    uint64 constant MTVEC      = 0x138;\\n    uint64 constant MSCRATCH   = 0x140;\\n    uint64 constant MEPC       = 0x148;\\n    uint64 constant MCAUSE     = 0x150;\\n    uint64 constant MTVAL      = 0x158;\\n    uint64 constant MISA       = 0x160;\\n    uint64 constant MIE        = 0x168;\\n    uint64 constant MIP        = 0x170;\\n    uint64 constant MEDELEG    = 0x178;\\n    uint64 constant MIDELEG    = 0x180;\\n    uint64 constant MCOUNTEREN = 0x188;\\n    uint64 constant STVEC      = 0x190;\\n    uint64 constant SSCRATCH   = 0x198;\\n    uint64 constant SEPC       = 0x1a0;\\n    uint64 constant SCAUSE     = 0x1a8;\\n    uint64 constant STVAL      = 0x1b0;\\n    uint64 constant SATP       = 0x1b8;\\n    uint64 constant SCOUNTEREN = 0x1c0;\\n    uint64 constant ILRSC      = 0x1c8;\\n    uint64 constant IFLAGS     = 0x1d0;\\n\\n    //getters - contracts cant access constants directly\\n    function getPc()         public pure returns(uint64) {return PC;}\\n    function getMvendorid()  public pure returns(uint64) {return MVENDORID;}\\n    function getMarchid()    public pure returns(uint64) {return MARCHID;}\\n    function getMimpid()     public pure returns(uint64) {return MIMPID;}\\n    function getMcycle()     public pure returns(uint64) {return MCYCLE;}\\n    function getMinstret()   public pure returns(uint64) {return MINSTRET;}\\n    function getMstatus()    public pure returns(uint64) {return MSTATUS;}\\n    function getMtvec()      public pure returns(uint64) {return MTVEC;}\\n    function getMscratch()   public pure returns(uint64) {return MSCRATCH;}\\n    function getMepc()       public pure returns(uint64) {return MEPC;}\\n    function getMcause()     public pure returns(uint64) {return MCAUSE;}\\n    function getMtval()      public pure returns(uint64) {return MTVAL;}\\n    function getMisa()       public pure returns(uint64) {return MISA;}\\n    function getMie()        public pure returns(uint64) {return MIE;}\\n    function getMip()        public pure returns(uint64) {return MIP;}\\n    function getMedeleg()    public pure returns(uint64) {return MEDELEG;}\\n    function getMideleg()    public pure returns(uint64) {return MIDELEG;}\\n    function getMcounteren() public pure returns(uint64) {return MCOUNTEREN;}\\n    function getStvec()      public pure returns(uint64) {return STVEC;}\\n    function getSscratch()   public pure returns(uint64) {return SSCRATCH;}\\n    function getSepc()       public pure returns(uint64) {return SEPC;}\\n    function getScause()     public pure returns(uint64) {return SCAUSE;}\\n    function getStval()      public pure returns(uint64) {return STVAL;}\\n    function getSatp()       public pure returns(uint64) {return SATP;}\\n    function getScounteren() public pure returns(uint64) {return SCOUNTEREN;}\\n    function getIlrsc()      public pure returns(uint64) {return ILRSC;}\\n    function getIflags()     public pure returns(uint64) {return IFLAGS;}\\n}\\n\",\"keccak256\":\"0xbfd187bab76a2802de777406cdddc9fe0cbf79ab8cb6f76075da7db664a9e9ae\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 5841,
        "contract": "contracts/MemoryInteractor.sol:MemoryInteractor",
        "label": "rwIndex",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 5844,
        "contract": "contracts/MemoryInteractor.sol:MemoryInteractor",
        "label": "rwPositions",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint64)dyn_storage"
      },
      {
        "astId": 5847,
        "contract": "contracts/MemoryInteractor.sol:MemoryInteractor",
        "label": "rwValues",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_bytes8)dyn_storage"
      },
      {
        "astId": 5850,
        "contract": "contracts/MemoryInteractor.sol:MemoryInteractor",
        "label": "isRead",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_bool)dyn_storage"
      }
    ],
    "types": {
      "t_array(t_bool)dyn_storage": {
        "base": "t_bool",
        "encoding": "dynamic_array",
        "label": "bool[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes8)dyn_storage": {
        "base": "t_bytes8",
        "encoding": "dynamic_array",
        "label": "bytes8[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint64)dyn_storage": {
        "base": "t_uint64",
        "encoding": "dynamic_array",
        "label": "uint64[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes8": {
        "encoding": "inplace",
        "label": "bytes8",
        "numberOfBytes": "8"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Bridge between Memory Manager and Step",
    "version": 1
  }
}