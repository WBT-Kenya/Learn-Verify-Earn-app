import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CartesiComputeHarness } from "../CartesiComputeHarness";
export declare class CartesiComputeHarness__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(_cartesiCompute: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<CartesiComputeHarness>;
    getDeployTransaction(_cartesiCompute: string, overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): CartesiComputeHarness;
    connect(signer: Signer): CartesiComputeHarness__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): CartesiComputeHarness;
}
