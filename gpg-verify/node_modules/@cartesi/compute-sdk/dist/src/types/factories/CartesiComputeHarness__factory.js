"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.CartesiComputeHarness__factory = void 0;
var ethers_1 = require("ethers");
var CartesiComputeHarness__factory = /** @class */ (function (_super) {
    __extends(CartesiComputeHarness__factory, _super);
    function CartesiComputeHarness__factory(signer) {
        return _super.call(this, _abi, _bytecode, signer) || this;
    }
    CartesiComputeHarness__factory.prototype.deploy = function (_cartesiCompute, overrides) {
        return _super.prototype.deploy.call(this, _cartesiCompute, overrides || {});
    };
    CartesiComputeHarness__factory.prototype.getDeployTransaction = function (_cartesiCompute, overrides) {
        return _super.prototype.getDeployTransaction.call(this, _cartesiCompute, overrides || {});
    };
    CartesiComputeHarness__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    CartesiComputeHarness__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    CartesiComputeHarness__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    return CartesiComputeHarness__factory;
}(ethers_1.ContractFactory));
exports.CartesiComputeHarness__factory = CartesiComputeHarness__factory;
var _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_cartesiCompute",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_finalTime",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "_templateHash",
                type: "bytes32",
            },
            {
                internalType: "uint64",
                name: "_outputPosition",
                type: "uint64",
            },
            {
                internalType: "uint8",
                name: "_outputLog2Size",
                type: "uint8",
            },
            {
                internalType: "uint256",
                name: "_roundDuration",
                type: "uint256",
            },
            {
                internalType: "address[]",
                name: "parties",
                type: "address[]",
            },
            {
                components: [
                    {
                        internalType: "uint64",
                        name: "position",
                        type: "uint64",
                    },
                    {
                        internalType: "uint8",
                        name: "driveLog2Size",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes",
                        name: "directValue",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "loggerIpfsPath",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes32",
                        name: "loggerRootHash",
                        type: "bytes32",
                    },
                    {
                        internalType: "address",
                        name: "provider",
                        type: "address",
                    },
                    {
                        internalType: "bool",
                        name: "waitsProvider",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "needsLogger",
                        type: "bool",
                    },
                    {
                        internalType: "bool",
                        name: "downloadAsCAR",
                        type: "bool",
                    },
                ],
                internalType: "struct CartesiComputeInterface.Drive[]",
                name: "_inputDrives",
                type: "tuple[]",
            },
            {
                internalType: "bool",
                name: "_noChallengeDrive",
                type: "bool",
            },
        ],
        name: "instantiate",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50604051610ceb380380610ceb83398101604081905261002f916100b9565b60006100396100b5565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b19169055600180546001600160a01b0319166001600160a01b03929092169190911790556100e7565b3390565b6000602082840312156100ca578081fd5b81516001600160a01b03811681146100e0578182fd5b9392505050565b610bf5806100f66000396000f3fe608060405234801561001057600080fd5b506004361061006d5760003560e01c80633f4ba83a146100725780635c975abb1461007c578063715018a61461009a5780638456cb59146100a25780638da5cb5b146100aa578063b72971ee146100bf578063f2fde38b146100df575b600080fd5b61007a6100f2565b005b61008461015e565b6040516100919190610a81565b60405180910390f35b61007a61016e565b61007a61021a565b6100b2610284565b6040516100919190610a6d565b6100d26100cd3660046107ea565b610293565b6040516100919190610a8c565b61007a6100ed3660046107b1565b61037f565b6100fa610481565b6001600160a01b031661010b610284565b6001600160a01b031614610154576040805162461bcd60e51b81526020600482018190526024820152600080516020610ba0833981519152604482015290519081900360640190fd5b61015c610485565b565b600054600160a01b900460ff1690565b610176610481565b6001600160a01b0316610187610284565b6001600160a01b0316146101d0576040805162461bcd60e51b81526020600482018190526024820152600080516020610ba0833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b610222610481565b6001600160a01b0316610233610284565b6001600160a01b03161461027c576040805162461bcd60e51b81526020600482018190526024820152600080516020610ba0833981519152604482015290519081900360640190fd5b61015c610528565b6000546001600160a01b031690565b600061029d61015e565b156102e2576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b600154604051635b94b8f760e11b81526001600160a01b039091169063b72971ee90610320908c908c908c908c908c908c908c908c90600401610a95565b602060405180830381600087803b15801561033a57600080fd5b505af115801561034e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037291906107d2565b5098975050505050505050565b610387610481565b6001600160a01b0316610398610284565b6001600160a01b0316146103e1576040805162461bcd60e51b81526020600482018190526024820152600080516020610ba0833981519152604482015290519081900360640190fd5b6001600160a01b0381166104265760405162461bcd60e51b8152600401808060200182810382526026815260200180610b7a6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b61048d61015e565b6104d5576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61050b610481565b604080516001600160a01b039092168252519081900360200190a1565b61053061015e565b15610575576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861050b610481565b80356001600160a01b03811681146105c857600080fd5b919050565b600082601f8301126105dd578081fd5b81356105f06105eb82610b5c565b610b39565b818152915060208083019084810160005b84811015610708578135870161012080601f19838c0301121561062357600080fd5b61062c81610b39565b610637868401610789565b815260406106468185016107a0565b878301526060808501356001600160401b038082111561066557600080fd5b6106738f8b848a0101610723565b84860152608093508387013591508082111561068e57600080fd5b5061069d8e8a83890101610723565b82850152505060a0808501358284015260c091506106bc8286016105b1565b9083015260e06106cd858201610713565b8284015261010091506106e1828601610713565b908301526106f0848401610713565b90820152865250509282019290820190600101610601565b505050505092915050565b803580151581146105c857600080fd5b600082601f830112610733578081fd5b81356001600160401b0381111561074657fe5b610759601f8201601f1916602001610b39565b915080825283602082850101111561077057600080fd5b8060208401602084013760009082016020015292915050565b80356001600160401b03811681146105c857600080fd5b803560ff811681146105c857600080fd5b6000602082840312156107c2578081fd5b6107cb826105b1565b9392505050565b6000602082840312156107e3578081fd5b5051919050565b600080600080600080600080610100898b031215610806578384fd5b883597506020890135965061081d60408a01610789565b955061082b60608a016107a0565b94506080890135935060a08901356001600160401b038082111561084d578485fd5b818b0191508b601f830112610860578485fd5b813561086e6105eb82610b5c565b80828252602082019150602085018f6020808602880101111561088f578889fd5b8895505b838610156108b9576108a4816105b1565b83526001959095019460209283019201610893565b509650505060c08b01359150808211156108d1578384fd5b506108de8b828c016105cd565b9250506108ed60e08a01610713565b90509295985092959890939650565b6001600160a01b03169052565b60008282518085526020808601955080818302840101818601855b848110156109fb57601f198684030189528151610120610945858351610a59565b8582015161095587870182610a66565b50604080830151828288015261096d83880182610a0e565b92505050606080830151868303828801526109888382610a0e565b92505050608080830151818701525060a0808301516109a9828801826108fc565b505060c0808301516109bd82880182610a08565b505060e0808301516109d182880182610a08565b505061010091820151916109e786820184610a08565b509985019993505090830190600101610924565b5090979650505050505050565b15159052565b60008151808452815b81811015610a3357602081850181015186830182015201610a17565b81811115610a445782602083870101525b50601f01601f19169290920160200192915050565b6001600160401b03169052565b60ff169052565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b60006101008083018b845260208b818601526001600160401b038b16604086015260ff8a1660608601528860808601528260a08601528192508751808352610120860193508189019250845b81811015610b065783516001600160a01b031685529382019392820192600101610ae1565b5050505082810360c0840152610b1c8186610909565b915050610b2c60e0830184610a08565b9998505050505050505050565b6040518181016001600160401b0381118282101715610b5457fe5b604052919050565b60006001600160401b03821115610b6f57fe5b506020908102019056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212209ab7cc278b5df6f38489422c04ccc6e6afe79a284c1b700d10778c42a333662f64736f6c63430007040033";
